{"version":3,"sources":["components/Common/gauge.png","components/Common/wallet.png","components/Common/cancel.png","components/Common/edit.png","components/Common/SampleData.png","components/Common/bl.png","components/Common/cf.png","components/Common/pl.png","components/Common/ratios.png","reducers/usersReducer.js","reducers/homeReducer.js","reducers/CompanyDetailReducer.js","reducers/navbarReducer.js","reducers/LoadingReducer.js","reducers/StocksReducer.js","reducers/IndicesReducer.js","components/StocksLanding.js","reducers/index.js","actions/Types.js","store.js","actions/Users.js","components/Register.js","components/ResetPassword.js","components/Login.js","components/Common/UserNavigation.js","actions/Navbar.js","components/UserProfile.js","components/UserBuyStocks.js","actions/Home.js","components/Common/TickerTable.js","components/Home.js","actions/LoadingAction.js","components/UserHistory.js","components/Kafka.js","components/NavbarDefault.js","actions/CompanyDetail.js","components/Common/CompanyDetailSecondaryNavbar.js","components/CompanyDetail.js","components/Common/RadarGraph.js","actions/Stocks.js","components/UpdateCompany.js","actions/UpdateCompany.js","components/Reports.js","components/CompanyDetailFinancial.js","components/CompanyDetailAnalysis.js","actions/Indices.js","components/Footer.js","components/IndicesProfile.js","App.js","serviceWorker.js","index.js","root.js","components/Common/stockslogo.PNG"],"names":["module","exports","initialstate","users","error","userhistory","sell","wallet","news","singleNews","indices","initialState","company","balance_sheet","ohlcChart","similar_company","dates","drop_down_data","gauge1","gauge2","monteCarlo1","monteCarlo2","assets1","assets2","voltality","priceComparison","results","isLoading","stocks","gainersLosers","sectors","industries","screener_search","decode","singleIndex","ohlcdata","combineReducers","homeReducer","state","action","type","payload","LoadingReducer","usersReducer","CompanyDetailReducer","navbarReducer","stocksReducer","indexReducer","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","url","sendOtp","user","dispatch","axios","post","then","res","data","catch","err","console","log","verifyOtp","response","message","Register","name","email","phone","password","confirmPassword","showError","errors","isAdmin","login","otp","signup","show_otp_field","sendOTP","validateForm","props","setState","register","e","createUser","verifyOTP","preventDefault","onChange","event","target","value","formIsValid","this","match","length","RegExp","test","id","className","to","onClick","placeholder","style","display","color","Component","connect","ResetPassword","inputField","OnChange","onReset","resetPassword","put","Login","onLogin","history","textDecoration","marginTop","localStorage","setItem","push","UserNavigation","getItem","jwt_decode","getWallet","src","Number","toFixed","selected","searchContent","searchInput","UserProfile","searchInputChanged","qty","total","searchString","onSearch","class","map","index","fontSize","paddingTop","justifyContent","ticker_name","price","href","current_price","buyStocks","padding","UserBuyStocks","getAllStocks","rand","hist","buying_quantity","Math","random","sell_price","selling_quantity","sellStocks","TickerTable","tableHeaders","tableData","current","isIndex","pathname","ticker_id","tickerValues","Object","keys","keyName","substring","Home","allNews","newsById","getIndices","new_id","headline","news_image","description","margin","Loader","height","width","get","news_id","UserHistory","userHistory","Date","buy_date","toLocaleDateString","month","day","year","stompClient","Stomp","require","SockJS","Kafka","onConnected","subscribe","onMessageReceived","onError","msg","body","JSON","parse","over","i","tickerName","closing","String","changePercentage","charAt","NavbarDefault","home","vtoption","removeToken","removeItem","forceUpdate","x","document","getElementById","myhamburgfunction","autoComplete","cancel","alt","result","industry","getCompanyDetailById","sector","getSimilarTable","getDropDownData","getGaugeCompany1","ticker","CompanyDetailSecondaryNavbar","getVolatility","coms","image","companylogo","last_share_price","share_date","last_market_cap","a","fetch","blob","URL","createObjectURL","createElement","download","click","CompanyDetail","params","employees","profile","marginBottom","outline","border","ohlc_chart","getOhlcChart","RadarGraph","marksData","labels","datasets","fill","backgroundColor","options","legend","responsive","UpdateCompany","onChangeHandler","selectedFile","files","onClickHandler","FormData","append","updateCompany","SampleTable","marginRight","Range","createSliderWithTooltip","Slider","StocksLanding","items","loadingstate","pageStocks","loading","gainersClick","ebit1","ebit2","market_cap_value1","market_cap_value2","share_price1","share_price2","total_assests1","total_assests2","revenue1","revenue2","net_profit1","net_profit2","filter","normal","borderColor","radius","pointRadius","pointBorderWidth","pointBackgroundColor","pointBorderColor","pointHoverRadius","onSliderChange","onSliderChange2","onSliderChange3","onSliderChange4","onSliderChange5","onSliderChange6","morefilter","onSearchClick","getScreenerSearch","OnSelectSector","getCompany","getIndustries","getGainersLosers","OnSelectIndustry","displayCompanies","Stocks","loadMoreItems","setTimeout","script","async","onload","scriptLoaded","appendChild","getSectors","nextProps","for","min","max","defaultValue","textAlign","dataLength","next","hasMore","loader","endMessage","NaN","marketcap","floor","net_profit","share_price","revenue","total_assets","ebit","editlogo","ticker_logo","gainers","losers","values","Reports","yearValue","headers","indicatorName","reportdata","yearSelected","CompanyDetailFinancial","getByYear","yearInput","getCompanyDatesById","getFullYear","years","Array","from","val","balanceSheetOption","cashflowOption","profitLossOption","ratiosOption","report","key","balanceSheet","cashFlow","profitloss","ratios","CompanyDetailAnalysis","OnSelectTicker","getGaugeCompany2","getAssetsCompany2","getmonteCarloCompany2","sharePriceComparison","getAssetsCompany1","getmonteCarloCompany1","similar_sector_data","companies","gauge","ticker1","ticker2","IndicesProfile","week","weekClick","getOhlcIndicesById","time","monthClick","getIndicesById","getOhlcChartIndex","close","open","high","adjclose","date","index1","low","volume","range","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","children","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.876fa045.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gauge.4cb2269f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallet.7ac9ba43.png\";","module.exports = __webpack_public_path__ + \"static/media/cancel.77019cf6.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.f6eacff2.png\";","module.exports = __webpack_public_path__ + \"static/media/SampleData.5223c19a.png\";","module.exports = __webpack_public_path__ + \"static/media/bl.c645a83d.png\";","module.exports = __webpack_public_path__ + \"static/media/cf.9fbd3612.png\";","module.exports = __webpack_public_path__ + \"static/media/pl.7870e02f.png\";","module.exports = __webpack_public_path__ + \"static/media/ratios.9c0148c6.png\";","import {\r\n  CREATE_USER,\r\n  LOGIN,\r\n  RESET_PASSWORD,\r\n  SEND_OTP,\r\n  VERIFY_OTP,\r\n  ERROR_TYPE,\r\n  USER_HISTORY,\r\n  BUY_STOCKS,\r\n  WALLET,\r\n  ALL_STOCKS_BOUGHT,\r\n  SELL_STOCKS\r\n} from \"../actions/Types\";\r\n\r\nconst initialstate = {\r\n  users: [],\r\n  error: \"\",\r\n  userhistory: [],\r\n  sell: [],\r\n  wallet: []\r\n};\r\n\r\nexport default function(state = initialstate, action) {\r\n  switch (action.type) {\r\n    case CREATE_USER:\r\n      return state;\r\n    case LOGIN:\r\n      return state;\r\n    case RESET_PASSWORD:\r\n      return state;\r\n    case SEND_OTP:\r\n      return state;\r\n    case VERIFY_OTP:\r\n      return state;\r\n    case USER_HISTORY:\r\n      return { ...state, userhistory: action.payload };\r\n    case WALLET:\r\n      return { ...state, wallet: action.payload };\r\n    case ALL_STOCKS_BOUGHT:\r\n      return { ...state, users: action.payload };\r\n    case SELL_STOCKS:\r\n      return state;\r\n    case BUY_STOCKS:\r\n      return { ...state, users: action.payload };\r\n    case ERROR_TYPE:\r\n      return { ...state, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ALL_NEWS, NEWS_BY_ID, GET_ALL_INDICES } from \"../actions/Types\";\r\n\r\nconst initialstate = {\r\n  news: [],\r\n  singleNews: [{}],\r\n  indices: []\r\n};\r\n\r\nexport default function(state = initialstate, action) {\r\n  switch (action.type) {\r\n    case ALL_NEWS:\r\n      return { ...state, news: action.payload };\r\n    case NEWS_BY_ID:\r\n      return { ...state, singleNews: action.payload };\r\n    case GET_ALL_INDICES:\r\n      return { ...state, indices: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  COMPANY_DETAIL_BY_ID,\r\n  BALANCE_SHEET,\r\n  OHLC_CHART,\r\n  GET_SIMILAR_TABLE,\r\n  COMPANY_DATES_BY_ID,\r\n  GET_DROP_DOWN,\r\n  GET_GAUGE_COMPANY1,\r\n  GET_GAUGE_COMPANY2,\r\n  ASSETS_COMPANY1,\r\n  ASSETS_COMPANY2,\r\n  MONTECARLO_COMPANY1,\r\n  MONTECARLO_COMPANY2,\r\n  VOLATILITY,\r\n  SHARE_PRICE_COMPARISON\r\n} from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n  company: [],\r\n  balance_sheet: [],\r\n  ohlcChart: [],\r\n  similar_company: [],\r\n  // storing the dates data returned from the COMPANY_DATES_BY_ID action type.\r\n  dates: [],\r\n  drop_down_data: [],\r\n  gauge1: [],\r\n  gauge2: [],\r\n  monteCarlo1: [],\r\n  monteCarlo2: [],\r\n  assets1: [],\r\n  assets2: [],\r\n  voltality: [],\r\n  priceComparison: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMPANY_DETAIL_BY_ID:\r\n      return {\r\n        ...state,\r\n        company: action.payload\r\n      };\r\n    // Action to get all the dates of a particular company\r\n    // used in Company Detail's Financial Component\r\n    // accepts input as ticker_id Eg:9,789,etc\r\n    // returns all the dates of Company\r\n    case COMPANY_DATES_BY_ID:\r\n      return {\r\n        ...state,\r\n        dates: action.payload\r\n      };\r\n    case GET_SIMILAR_TABLE:\r\n      return {\r\n        ...state,\r\n        similar_company: action.payload\r\n      };\r\n    case BALANCE_SHEET:\r\n      return {\r\n        ...state,\r\n        balance_sheet: action.payload\r\n      };\r\n    case GET_DROP_DOWN:\r\n      return {\r\n        ...state,\r\n        drop_down_data: action.payload\r\n      };\r\n    case OHLC_CHART:\r\n      return { ...state, ohlcChart: action.payload };\r\n    case GET_GAUGE_COMPANY1:\r\n      return { ...state, gauge1: action.payload };\r\n    case GET_GAUGE_COMPANY2:\r\n      return { ...state, gauge2: action.payload };\r\n    case MONTECARLO_COMPANY1:\r\n      return { ...state, monteCarlo1: action.payload };\r\n    case MONTECARLO_COMPANY2:\r\n      return { ...state, monteCarlo2: action.payload };\r\n    case ASSETS_COMPANY1:\r\n      return { ...state, assets1: action.payload };\r\n    case ASSETS_COMPANY2:\r\n      return { ...state, assets2: action.payload };\r\n    case VOLATILITY:\r\n      return { ...state, voltality: action.payload };\r\n    case SHARE_PRICE_COMPARISON:\r\n      return { ...state, priceComparison: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SEARCH_CONTENT } from \"../actions/Types\";\r\n\r\n// sets initial state as Empty array\r\nconst initialstate = {\r\n  results: []\r\n};\r\n\r\nexport default function(state = initialstate, action) {\r\n  // Switches between actions\r\n  switch (action.type) {\r\n    // if search action called\r\n    case SEARCH_CONTENT:\r\n      // returns the new state along with both previous and new values from the action\r\n      return { ...state, results: action.payload };\r\n    // the default action\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LOADING_START, LOADING_STOP } from \"../actions/Types\";\r\n\r\nconst initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case LOADING_STOP:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_ALL_COMPANY,\r\n  GAINERS_LOSERS,\r\n  GET_ALL_SECTORS,\r\n  GET_ALL_INDUSTRIES,\r\n  SCREENER_SEARCH\r\n} from \"../actions/Types\";\r\n\r\nconst initialstate = {\r\n  stocks: [],\r\n  gainersLosers: [],\r\n  sectors: [],\r\n  industries: [],\r\n  screener_search: []\r\n};\r\n\r\nexport default function(state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_COMPANY:\r\n      return { ...state, stocks: action.payload };\r\n    case GAINERS_LOSERS:\r\n      return { ...state, gainersLosers: action.payload };\r\n    case GET_ALL_SECTORS:\r\n      return { ...state, sectors: action.payload };\r\n    case SCREENER_SEARCH:\r\n      return { ...state, screener_search: action.payload };\r\n    case GET_ALL_INDUSTRIES:\r\n      return { ...state, industries: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_INDICES_BYID,\r\n  OHLC_CHART_INDEX,\r\n  OHLC_INDICES_DATA\r\n} from \"../actions/Types\";\r\n\r\nconst initialstate = {\r\n  singleIndex: [],\r\n  ohlcChart: [],\r\n  ohlcdata: []\r\n};\r\n\r\nexport default function(state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_INDICES_BYID:\r\n      return { ...state, singleIndex: action.payload };\r\n    case OHLC_CHART_INDEX:\r\n      return { ...state, ohlcChart: action.payload };\r\n    case OHLC_INDICES_DATA:\r\n      return { ...state, ohlcdata: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//[Nikhil] imports for range slider\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\nimport \"../styles/AdvanceFilter.css\";\r\nimport Slider from \"rc-slider\";\r\nimport { RadarGraph } from \"./Common/RadarGraph\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import RadarSlider from \"../charts/graph\";\r\n\r\nimport {\r\n  getCompany,\r\n  getSectors,\r\n  getIndustries,\r\n  getGainersLosers,\r\n  //[NIKHIL] SCREENER ACTIONS\r\n  getScreenerSearch\r\n} from \"../actions/Stocks\";\r\nimport \"../styles/StocksLanding.css\";\r\nimport \"../styles/Admin.css\";\r\nimport companylogo from \"./Common/stockslogo.PNG\";\r\nimport editlogo from \"./Common/edit.png\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Table from \"../components/Common/TickerTable\";\r\n\r\n// Harshal\r\nimport UpdateCompany from \"./UpdateCompany\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nvar decode;\r\n\r\n//[Nikhil] rc-slider\r\n//package documentation link\r\n//https://www.npmjs.com/package/rc-slider\r\n\r\n//source code http://react-component.github.io/slider/examples/handle.html\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nexport class StocksLanding extends Component {\r\n  state = {\r\n    data: [],\r\n    items: 20,\r\n    loadingstate: false,\r\n    height: 800,\r\n    pageStocks: [],\r\n    loading: false,\r\n    sector: \"Basic Materials\",\r\n    industry: \"Building Materials\",\r\n    gainersClick: true,\r\n\r\n    //[Nikhil] default slider value\r\n    ebit1: -50,\r\n    ebit2: 1000,\r\n    market_cap_value1: 0,\r\n    market_cap_value2: 1000,\r\n    share_price1: 0,\r\n    share_price2: 1000,\r\n    total_assests1: 0,\r\n    total_assests2: 1000,\r\n    revenue1: 0,\r\n    revenue2: 1000,\r\n    net_profit1: 0,\r\n    net_profit2: 1000,\r\n    filter: false,\r\n    normal: true,\r\n\r\n    //[NIKHIL] radar graph\r\n\r\n    marksData: {\r\n      labels: [\r\n        \"Market Cap\",\r\n        \"Dividend\",\r\n        \"PE Ratio\",\r\n        \"Debt to Equity Ratio\",\r\n        \"Share Price\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          // label: \"Student A\",\r\n          backgroundColor: \"rgba(57,139,247,0.3)\",\r\n          borderColor: \"rgb(44,62,80)\",\r\n          fill: true,\r\n          radius: 3,\r\n          pointRadius: 3,\r\n          pointBorderWidth: 3,\r\n          pointBackgroundColor: \"#39abf7\",\r\n          pointBorderColor: \"#2c3e50\",\r\n          pointHoverRadius: 10,\r\n          //values coming from the database\r\n\r\n          data: []\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  //for slider handle cange\r\n  onSliderChange = e => {\r\n    console.log(e);\r\n    //changing the state with the  value selected\r\n    this.setState({ ebit1: e[0] });\r\n    this.setState({ ebit2: e[1] });\r\n  };\r\n  onSliderChange2 = e => {\r\n    this.setState({ market_cap_value1: e[0] });\r\n    this.setState({ market_cap_value2: e[1] });\r\n  };\r\n  onSliderChange3 = e => {\r\n    this.setState({ share_price1: e[0] });\r\n    this.setState({ share_price2: e[1] });\r\n  };\r\n\r\n  onSliderChange4 = e => {\r\n    this.setState({ total_assests1: e[0] });\r\n    this.setState({ total_assests2: e[1] });\r\n  };\r\n  onSliderChange5 = e => {\r\n    this.setState({ revenue1: e[0] });\r\n    this.setState({ revenue2: e[1] });\r\n  };\r\n  onSliderChange6 = e => {\r\n    this.setState({ net_profit1: e[0] });\r\n    this.setState({ net_profit2: e[1] });\r\n  };\r\n  morefilter = e => {\r\n    this.setState({ filter: false });\r\n    console.log(\"more filter\");\r\n  };\r\n\r\n  onSearchClick = e => {\r\n    this.state.filter = true;\r\n    console.log(\"after clicked\", this.state.filter);\r\n\r\n    console.log(\"Button Clciked\", this.state.industry);\r\n    this.props.getScreenerSearch(\r\n      this.state.ebit1,\r\n      this.state.ebit2,\r\n      this.state.market_cap_value1,\r\n      this.state.market_cap_value2,\r\n      this.state.share_price1,\r\n      this.state.share_price2,\r\n      this.state.total_assests1,\r\n      this.state.total_assests2,\r\n      this.state.revenue1,\r\n      this.state.revenue2,\r\n      this.state.net_profit1,\r\n      this.state.net_profit2,\r\n\r\n      this.state.sector,\r\n      this.state.industry\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    //for loading graph.js\r\n    console.log(\"filter\", this.state.filter);\r\n    // this.props.getSectorCompany(this.state.sector); //getting all the companies based on a sector selected\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"C:Users\\nikhiDesktopgraphgraph.js\";\r\n    script.async = true;\r\n    script.onload = () => this.scriptLoaded();\r\n\r\n    document.body.appendChild(script);\r\n\r\n    // this.props.getSectorCompany(this.state.sector); //getting all the companies based on a sector selected\r\n    this.props.getCompany(\"sector\", this.state.sector);\r\n    this.props.getSectors(); //getting all the sectors\r\n    this.props.getIndustries(this.state.sector); //getting all the industries based on a sector selected\r\n    this.props.getGainersLosers(this.state.sector); //getting all the gainers and losers based on a sector selected\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.stocks.length > 0\r\n      ? this.displayCompanies(nextProps.stocks)\r\n      : console.log(0, \" Stocks\");\r\n    // if (nextProps.industries.length > 0) {\r\n    //   this.setState({ industry: nextProps.industries[0] });\r\n    // this.props.getCompany(\"industry\", nextProps.industries[0]);\r\n    // }\r\n  }\r\n\r\n  OnSelectSector = e => {\r\n    this.setState({\r\n      sector: e.target.value //setting state for the sector\r\n    });\r\n    this.props.getCompany(\"sector\", e.target.value);\r\n    this.props.getIndustries(e.target.value); //getting all the industries based on a sector selected\r\n    this.props.getGainersLosers(e.target.value); //getting all the gainers and losers based on a sector selected\r\n  };\r\n\r\n  OnSelectIndustry = e => {\r\n    this.setState({\r\n      industry: e.target.value //setting state for the industry\r\n    });\r\n    this.props.getCompany(\"industry\", e.target.value); //getting all the companies based on an industry selected\r\n  };\r\n\r\n  displayCompanies = Stocks => {\r\n    console.log(Stocks);\r\n    const { items } = this.state;\r\n\r\n    if (Stocks.length === 0) return;\r\n    let pageStocks = [];\r\n    for (let i = 0; i < items; i++) {\r\n      pageStocks.push(Stocks[i]);\r\n    }\r\n    this.setState({ pageStocks });\r\n    console.log(\"PageStocks array\", this.state.pageStocks.length);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        items: this.state.items + 10\r\n      });\r\n      this.displayCompanies(this.props.stocks);\r\n    }, 1000);\r\n  };\r\n  // chartOptions = {\r\n  //   scale: {\r\n  //     ticks: {\r\n  //       beginAtZero: true,\r\n  //       min: 0,\r\n  //       max: 100,\r\n  //       stepSize: 20,\r\n  //     },\r\n  //     pointLabels: {\r\n  //       fontSize: 18,\r\n  //     },\r\n  //   },\r\n  //   legend: {\r\n  //     position: \"left\",\r\n  //   },\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      decode = jwt_decode(localStorage.getItem(\"token\"));\r\n      // console.log(decode.isAdmin);\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"graph\"></div>\r\n        {/* SEARCH BUTTON */}\r\n\r\n        {/* ends */}\r\n        {this.props.gainersLosers[\"0\"] ? (\r\n          <div id=\"stocks_main_container\">\r\n            {/* <p>STOCKS</p> */}\r\n            <div id=\"stocks_filter\">\r\n              <select\r\n                type=\"text\"\r\n                id=\"stocks_dropdown_sectors\"\r\n                className=\"stocks_dropdown\"\r\n                name=\"sector\"\r\n                value={this.state.sector}\r\n                onChange={this.OnSelectSector}\r\n              >\r\n                {this.props.sectors.map((sectors, index) => (\r\n                  <>\r\n                    <option name=\"choice\" id={\"sector\" + index}>\r\n                      {sectors}\r\n                    </option>\r\n                    {/*mapping all the sectors to select from the dropdown*/}\r\n                  </>\r\n                ))}\r\n              </select>\r\n              <select\r\n                type=\"text\"\r\n                className=\"stocks_dropdown\"\r\n                id=\"stocks_dropdown_industries\"\r\n                name=\"industries\"\r\n                value={this.state.industry} //changing the value of industry when selected\r\n                onChange={this.OnSelectIndustry} //on change perform this function\r\n              >\r\n                <option name=\"choice\">Select an Industry</option>\r\n                {this.props.industries.map((industries, index) => (\r\n                  <>\r\n                    <option name=\"choice\" id={\"industry\" + index}>\r\n                      {industries}\r\n                    </option>\r\n                    {/* mapping all the industries in the dropdown based on the selected sector*/}\r\n                  </>\r\n                ))}\r\n              </select>\r\n              {localStorage.getItem(\"token\") ? (\r\n                <>\r\n                  <label\r\n                    id=\"advance-label\"\r\n                    for=\"toggle-1\"\r\n                    onClick={this.morefilter}\r\n                  >\r\n                    <i class=\"fa fa-filter\" id=\"filter_icon\"></i>\r\n                    <span id=\"more_filters_title\">More Filters</span>\r\n                  </label>\r\n                  <input type=\"checkbox\" id=\"toggle-1\" />{\" \"}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <label id=\"advance-label\" for=\"toggle-1\">\r\n                    <i class=\"fa fa-filter\" id=\"filter_icon\"></i>\r\n                    <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                      <span id=\"more_filters_title\">More Filters</span>\r\n                    </Link>\r\n                  </label>\r\n                  <input type=\"checkbox\" id=\"toggle-1\" />{\" \"}\r\n                </>\r\n              )}\r\n\r\n              <div\r\n                id=\"div_filter_main_container\"\r\n                className=\"w3-container w3-center w3-animate-opacity\"\r\n              >\r\n                {/* <label href=\"id\" className=\"fa fa-close\" id=\"close_filter\" /> */}\r\n                <label href=\"id\" id=\"close_filter\" />\r\n                <div id=\"filter_main_container\">\r\n                  <div id=\"stocks-advance-filter-grid-main-container\">\r\n                    <div id=\"advance-fliter-dividend\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-dividend-p\">EBIT </p>\r\n                      </div>\r\n                      {/* FOR DIVIDEND  */}\r\n                      <div id=\"stocks-landing-page-slider\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={-50}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[this.state.ebit1, this.state.ebit1]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">-50</p>\r\n                        <p id=\"advance-filter-value2\">1000</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* FOR MARKET CAP  */}\r\n                    <div id=\"advance-filter-market-cap\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-market-cap-p\">Market Cap</p>\r\n                      </div>\r\n                      <div id=\"stocks-landing-page-slider\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={0}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[\r\n                            this.state.market_cap_value1,\r\n                            this.state.market_cap_value2\r\n                          ]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange2}\r\n                          name={\"slider1\"}\r\n                        />\r\n                      </div>\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">0</p>\r\n                        <p id=\"advance-filter-value2\">100</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* FOR SHARE Price  */}\r\n                    <div id=\"advance-filter-share-price\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-share-price-p\">Share Price </p>\r\n                      </div>\r\n                      <div id=\"stocks-landing-page-slide\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={0}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[\r\n                            this.state.share_price1,\r\n                            this.state.share_price2\r\n                          ]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange3}\r\n                        />\r\n                      </div>\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">0</p>\r\n                        <p id=\"advance-filter-value2\">100</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* for PE RATIO */}\r\n                    <div id=\"advance-filter-price-to-equity\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-price-to-equity-p\">\r\n                          Total Assests\r\n                        </p>\r\n                      </div>\r\n                      <div id=\"stocks-landing-page-slider\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={0}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[\r\n                            this.state.total_assests1,\r\n                            this.state.total_assests2\r\n                          ]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange4}\r\n                        />\r\n                      </div>\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">0</p>\r\n                        <p id=\"advance-filter-value2\">100</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* net profit  */}\r\n                    <div id=\"advance-filter-net-profit\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-debt-to-equity-p\">Net Profit</p>\r\n                      </div>\r\n                      <div id=\"stocks-landing-page-slider\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={0}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[\r\n                            this.state.net_profit1,\r\n                            this.state.net_profit2\r\n                          ]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange6}\r\n                        />\r\n                      </div>\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">0</p>\r\n                        <p id=\"advance-filter-value2\">100</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Revenues*/}\r\n                    <div id=\"advance-filter-revenues\">\r\n                      <div id=\"advance-filter-title\">\r\n                        <p id=\"advance-filter-debt-to-equity-p\">Revenues</p>\r\n                      </div>\r\n                      <div id=\"stocks-landing-page-slider\">\r\n                        {/* CLLING THE COMPONENT WITH THE RS SLIDER PACKAGE  */}\r\n                        <Range\r\n                          // SETTING THE MINIMUM VALUE\r\n                          min={0}\r\n                          // SETTING THE MAXIMUM VALUE\r\n                          max={1000}\r\n                          //SETTING THE DEFAULT VALUE WHICH IS DEFINED IN THE STATE OF THE COMPONENT\r\n                          defaultValue={[\r\n                            this.state.revenue1,\r\n                            this.state.revenue2\r\n                          ]}\r\n                          //ON CHANGING CALLING THE SLIDERCHANGE\r\n                          onChange={this.onSliderChange5}\r\n                        />\r\n                      </div>\r\n                      <div id=\"advance-filter-debt-to-equity-ratio-value\">\r\n                        <p id=\"advance-filter-value\">0</p>\r\n                        <p id=\"advance-filter-value2\">100</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* for net profit */}\r\n                    {/*  */}\r\n                  </div>\r\n                  {/* main grid container  */}\r\n                  <button\r\n                    id=\"advance-filter-button\"\r\n                    type=\"submit\"\r\n                    onClick={this.onSearchClick}\r\n                  >\r\n                    Filter\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id=\"stocks_main_grid_container\">\r\n              {this.props.isLoading ? (\r\n                <div id=\"stocks_loader\">\r\n                  <Loader type={Loader} color=\"#2c3e50\" textAlign=\"center\" />\r\n                </div>\r\n              ) : (\r\n                <InfiniteScroll\r\n                  dataLength={this.state.pageStocks.length} //This is important field to render the next data\r\n                  next={this.loadMoreItems}\r\n                  hasMore={true}\r\n                  height={600}\r\n                  loader={\r\n                    <div id=\"stocks_loader\">\r\n                      <Loader\r\n                        type={Loader}\r\n                        color=\"#2c3e50\"\r\n                        textAlign=\"center\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>Yay! You have seen all the stocks</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div\r\n                    id={\r\n                      this.state.filter == true\r\n                        ? \"stocks_grid_container_filter_screener\"\r\n                        : \"stocks_grid_container\"\r\n                    }\r\n                  >\r\n                    {this.state.filter == true ? (\r\n                      <>\r\n                        {this.props.screener_search.length != 0 ? (\r\n                          <>\r\n                            {this.props.screener_search.map(screener_search => (\r\n                              // <h3>{screener_search.dividend}</h3>\r\n                              <div>\r\n                                <div\r\n                                  id=\"stocks_grid_details_filter_screener\"\r\n                                  onClick={() => {\r\n                                    this.props.history.push(\r\n                                      \"/companydetail/\" + screener_search.id, //pushing to the company details page with ticker id of a stock when that particular stock card is clicked\r\n                                      { screener_search }\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <RadarGraph\r\n                                    data={[\r\n                                      screener_search.marketcap != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.marketcap)\r\n                                          )\r\n                                        : 0,\r\n                                      screener_search.net_profit != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.net_profit)\r\n                                          )\r\n                                        : 0,\r\n                                      screener_search.share_price != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.share_price)\r\n                                          )\r\n                                        : 0,\r\n                                      screener_search.revenue != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.revenue)\r\n                                          )\r\n                                        : 0,\r\n                                      screener_search.total_assets != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.total_assets)\r\n                                          )\r\n                                        : 0,\r\n                                      screener_search.ebit != NaN\r\n                                        ? Math.floor(\r\n                                            Number(screener_search.ebit)\r\n                                          )\r\n                                        : 0\r\n                                    ]}\r\n                                  />\r\n                                  <div id=\"stocks_ticker\">\r\n                                    {screener_search[\"ticker_name\"]}\r\n                                  </div>\r\n                                  {/* mapping the ticker name from the api*/}\r\n                                  {/* <div id=\"stocks_name\">{}</div> */}\r\n                                  {/* <div id=\"stocks_flex_details_one\"> */}\r\n                                  {/* <div\r\n                                  id=\"stocks_closed_price\"\r\n                                  className=\"stocks_details_title\"\r\n                                >\r\n                                  Closed Price:\r\n                                </div> */}\r\n                                  {/* <div id=\"stocks_details\">\r\n                                  {screener_search[\"Share Price\"]}USD\r\n                                </div> */}\r\n                                  {/* mapping the share price from the api */}\r\n                                  {/* </div> */}\r\n                                  {/* <div id=\"stocks_flex_details_two\">\r\n                                <div\r\n                                  id=\"stocks_market_cap\"\r\n                                  className=\"stocks_details_title\"\r\n                                >\r\n                                  Market Cap:\r\n                                </div> */}\r\n                                  {/* <div id=\"stocks_details\">\r\n                                  {screener_search[\"MarketCap\"]}M\r\n                                </div> */}\r\n                                  {/* mapping the market cap from the api */}\r\n                                  {/* </div> */}\r\n                                </div>\r\n                              </div>\r\n\r\n                              // end of nikhils mapping\r\n                            ))}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <h1>No Companies Found</h1>\r\n                            {console.log(\"No data\")}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        {this.state.pageStocks.map((stocks, index) =>\r\n                          stocks ? (\r\n                            <div id=\"stocks_main_grid_details\">\r\n                              {localStorage.getItem(\"token\") ? (\r\n                                <>\r\n                                  {decode.isAdmin ? (\r\n                                    <>\r\n                                      <a\r\n                                        href={\"#editpopup\" + stocks.ticker_name}\r\n                                      >\r\n                                        <img\r\n                                          id=\"stocks_edit\"\r\n                                          alt=\"edit\"\r\n                                          src={editlogo}\r\n                                        />\r\n                                      </a>\r\n                                      <div\r\n                                        id={\"editpopup\" + stocks.ticker_name}\r\n                                        class=\"admin_overlay\"\r\n                                      >\r\n                                        <div class=\"admin_popup\">\r\n                                          <h2>Update {stocks.ticker_name}</h2>\r\n                                          <UpdateCompany\r\n                                            id={stocks.ticker_id}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                              <div\r\n                                id=\"stocks_grid_details\"\r\n                                className={\"stock_details\" + index}\r\n                                onClick={() => {\r\n                                  this.props.history.push(\r\n                                    \"/companydetail/\" + stocks.ticker_id, //pushing to the company details page with ticker id of a stock when that particular stock card is clicked\r\n                                    { stocks }\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  id=\"stocks_img\"\r\n                                  alt=\"logo\"\r\n                                  src={\r\n                                    stocks.ticker_logo == null\r\n                                      ? companylogo\r\n                                      : \"data:image/jpeg;base64,\" +\r\n                                        stocks.ticker_logo\r\n                                  }\r\n                                />\r\n                                <div\r\n                                  id=\"stocks_ticker\"\r\n                                  className={\"stocks_ticker\" + index}\r\n                                >\r\n                                  {stocks[\"ticker_name\"]}\r\n                                </div>\r\n                                {/* mapping the ticker name from the api*/}\r\n                                <div id=\"stocks_name\">{}</div>\r\n                                <div id=\"stocks_flex_details_one\">\r\n                                  <div id={\"stocks_closed_price\" + index}>\r\n                                    Closed Price:\r\n                                  </div>\r\n                                  <div id=\"stocks_details\">\r\n                                    {stocks[\"Share Price\"]}USD\r\n                                  </div>\r\n                                  {/* mapping the share price from the api */}\r\n                                </div>\r\n                                <div id=\"stocks_flex_details_two\">\r\n                                  <div\r\n                                    id={\"stocks_market_cap\" + index}\r\n                                    className=\"stocks_details_title\"\r\n                                  >\r\n                                    Market Cap:\r\n                                  </div>\r\n                                  <div id=\"stocks_details\">\r\n                                    {stocks[\"MarketCap\"]}M\r\n                                  </div>\r\n                                  {/* mapping the market cap from the api */}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ) : null\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </InfiniteScroll>\r\n              )}\r\n            </div>\r\n            <div id=\"stocks_table\">\r\n              <div id=\"stocks_div_buttons\">\r\n                <button\r\n                  id=\"button_stocks_gainers\"\r\n                  className={\r\n                    this.state.gainersClick === true //changing the color of gainers button when clicked on it\r\n                      ? \"stocks_gainers\"\r\n                      : \"stocks_losers\"\r\n                  }\r\n                  onClick={() => this.setState({ gainersClick: true })} //on clicking the gainers button, the state of gainersClick is set true\r\n                >\r\n                  Gainers\r\n                </button>\r\n                <button\r\n                  id=\"button_stocks_losers\"\r\n                  className={\r\n                    this.state.gainersClick === false //changing the color of losers button when clicked on it\r\n                      ? \"stocks_gainers\"\r\n                      : \"stocks_losers\"\r\n                  }\r\n                  onClick={() => this.setState({ gainersClick: false })} //on clicking the losers button, the state of gainersClick is set false\r\n                >\r\n                  Losers\r\n                </button>\r\n              </div>\r\n              <Table\r\n                tableHeaders={[\r\n                  \"Ticker\",\r\n                  \"Chng (%)\",\r\n                  \"Market Cap\",\r\n                  \"Share Price\"\r\n                ]}\r\n                tableData={\r\n                  this.state.gainersClick === true //displaying the gainers data in the table if state of gainersClick is true that is when gainers button is clicked else losers data is displayed\r\n                    ? this.props.gainersLosers[\"0\"].gainers\r\n                    : this.props.gainersLosers[\"0\"].losers\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div id=\"stocks_main_loader\">\r\n            <Loader type={Loader} color=\"#2c3e50\" textAlign=\"center\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.stocksReducer.stocks,\r\n  sectors: state.stocksReducer.sectors,\r\n  industries: state.stocksReducer.industries,\r\n  gainersLosers: state.stocksReducer.gainersLosers,\r\n  isLoading: state.LoadingReducer.isLoading,\r\n  screener_search: state.stocksReducer.screener_search\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCompany,\r\n  getSectors,\r\n  getIndustries,\r\n  getGainersLosers,\r\n  getScreenerSearch\r\n})(StocksLanding);\r\n","import { combineReducers } from \"redux\";\r\nimport users from \"./usersReducer\";\r\nimport home from \"./homeReducer\";\r\nimport company from \"./CompanyDetailReducer\";\r\nimport searchResults from \"./navbarReducer\";\r\nimport LoadingReducer from \"./LoadingReducer\";\r\nimport stocks from \"./StocksReducer\";\r\nimport singleIndex from \"./IndicesReducer\";\r\nexport default combineReducers({\r\n  //piyush\r\n  homeReducer: home,\r\n  LoadingReducer,\r\n\r\n  //bhavana\r\n  usersReducer: users,\r\n  //nikhil\r\n  CompanyDetailReducer: company,\r\n  // Harshal\r\n  navbarReducer: searchResults,\r\n  stocksReducer: stocks,\r\n  indexReducer: singleIndex\r\n});\r\n","//Bhavna\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const SEND_OTP = \"SEND_OTP\";\r\nexport const VERIFY_OTP = \"VERIFY_OTP\";\r\nexport const ERROR_TYPE = \"ERROR_TYPE\";\r\nexport const GET_INDICES_BYID = \"GET_INDICES_BYID\";\r\nexport const OHLC_CHART_INDEX = \"OHLC_CHART_INDEX\";\r\nexport const GAINERS_LOSERS = \"GAINERS_LOSERS\";\r\nexport const OHLC_INDICES_DATA = \"OHLC_INDICES_DATA\";\r\nexport const BUY_STOCKS = \"BUY_STOCKS\";\r\nexport const WALLET = \"WALLET\";\r\nexport const ALL_STOCKS_BOUGHT = \"ALL_STOCKS_BOUGHT\";\r\nexport const SELL_STOCKS = \"SELL_STOCKS\";\r\n\r\n//Aditya\r\nexport const GET_ALL_COMPANY = \"GET_ALL_COMPANY\";\r\nexport const GET_ALL_SECTORS = \"GET_ALL_SECTORS\";\r\nexport const GET_ALL_INDUSTRIES = \"GET_ALL_INDUSTRIES\";\r\n\r\n//Piyush\r\nexport const ALL_NEWS = \"ALL_NEWS\";\r\nexport const NEWS_BY_ID = \"NEWS_BY_ID\";\r\nexport const GET_ALL_INDICES = \"GET_ALL_INDICES\";\r\nexport const LOADING_START = \"LOADING_START\";\r\nexport const LOADING_STOP = \"LOADING_STOP\";\r\nexport const DOWNLOAD = \"DOWNLOAD\";\r\nexport const USER_HISTORY = \"USER_HISTORY\";\r\n\r\n//NIKHIL\r\nexport const COMPANY_DETAIL = \"COMPANY_DETAIL\";\r\nexport const COMPANY_DETAIL_BY_ID = \"COMPANY_DETAIL_BY_ID\";\r\nexport const BALANCE_SHEET = \"BALANCE_SHEET\";\r\nexport const CASH_FLOW = \"CASH_FLOW\";\r\nexport const PROFIT_AND_LOSS = \"PROFIT_AND_LOSS\";\r\nexport const OHLC_CHART = \"OHLC_CHART\";\r\nexport const GET_SIMILAR_TABLE = \"OHLC_CHART\";\r\nexport const GET_DROP_DOWN = \"GET_DROP_DOWN\";\r\nexport const GET_GAUGE_COMPANY1 = \"GET_GAUGE_COMPANY1\";\r\nexport const GET_GAUGE_COMPANY2 = \"GET_GAUGE_COMPANY2\";\r\nexport const MONTECARLO_COMPANY1 = \"MONTECARLO_COMPANY1\";\r\nexport const MONTECARLO_COMPANY2 = \"MONTECARLO_COMPANY2\";\r\nexport const ASSETS_COMPANY1 = \"ASSETS_COMPANY1\";\r\nexport const ASSETS_COMPANY2 = \"ASSETS_COMPANY2\";\r\nexport const VOLATILITY = \"VOLATILITY\";\r\nexport const SHARE_PRICE_COMPARISON = \"SHARE_PRICE_COMPARISON\";\r\nexport const SCREENER_SEARCH = \"SCREENER_SEARCH\"; //FOR SCREENER IN STOCKS LANDING PAGE\r\n\r\n// Harshal\r\nexport const SEARCH_CONTENT = \"SEARCH_CONTENT\";\r\nexport const UPDATE_COMPANY = \"UPDATE_COMPANY\";\r\nexport const COMPANY_DATES_BY_ID = \"COMPANY_DATES_BY_ID\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\n\r\nexport default store;\r\n","import {\r\n  CREATE_USER,\r\n  LOGIN,\r\n  RESET_PASSWORD,\r\n  SEND_OTP,\r\n  VERIFY_OTP,\r\n  ERROR_TYPE,\r\n  USER_HISTORY,\r\n  BUY_STOCKS,\r\n  WALLET,\r\n  ALL_STOCKS_BOUGHT,\r\n  SELL_STOCKS\r\n} from \"./Types\";\r\nimport axios from \"axios\";\r\nconst url = \"https://headstocks-server-nodejs.herokuapp.com/api/users/\";\r\n\r\n// Create a new user - Bhavana\r\nexport const createUser = user => dispatch => {\r\n  return axios\r\n    .post(url + \"signup\", user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: CREATE_USER,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ERROR_TYPE,\r\n        payload: err.response.data.message\r\n      });\r\n    });\r\n};\r\n\r\n// Login - Bhavana\r\nexport const login = (user, history) => dispatch => {\r\n  return axios\r\n    .post(url + \"login\", user)\r\n    .then(res => {\r\n      localStorage.setItem(\"token\", res.data.data);\r\n      history.push(\"/\");\r\n      dispatch({\r\n        type: LOGIN,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ERROR_TYPE,\r\n        payload: err.response.data.message\r\n      });\r\n    });\r\n};\r\n\r\n// Reset Password - Bhavana\r\nexport const resetPassword = user => dispatch => {\r\n  return axios\r\n    .put(url + \"reset_password\", user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: RESET_PASSWORD,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Send OTP to verify email - Bhavana\r\nexport const sendOtp = user => dispatch => {\r\n  return axios\r\n    .post(url + \"send_otp\", user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: SEND_OTP,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Verify Otp - Bhavana\r\nexport const verifyOtp = user => dispatch => {\r\n  return axios\r\n    .post(url + \"verify_otp\", user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: VERIFY_OTP,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ERROR_TYPE,\r\n        payload: err.response.data.message\r\n      });\r\n      console.log(err.response.data.message);\r\n    });\r\n};\r\n\r\n//for  users stock history detail [piyush]\r\nexport const userHistory = email => dispatch => {\r\n  return axios\r\n    .get(url + \"history/\" + email)\r\n    .then(res => {\r\n      dispatch({\r\n        type: USER_HISTORY,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//buy Stocks for users - Bhavama\r\nexport const buyStocks = stocks => dispatch => {\r\n  console.log(stocks);\r\n  return axios\r\n    .put(url + \"buy\", stocks)\r\n    .then(res => {\r\n      dispatch({\r\n        type: BUY_STOCKS,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//Get Wallet Balance\r\nexport const getWallet = email => dispatch => {\r\n  return axios\r\n    .post(url + \"wallet\", email)\r\n    .then(res => {\r\n      dispatch({\r\n        type: WALLET,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//Get All Stocks Bought by a user\r\nexport const getAllStocks = email => dispatch => {\r\n  return axios\r\n    .post(url + \"myStocks\", email)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ALL_STOCKS_BOUGHT,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n// Sell Stocks\r\nexport const sellStocks = email => dispatch => {\r\n  console.log(email);\r\n  return axios\r\n    .put(url + \"sell\", email)\r\n    .then(res => {\r\n      dispatch({\r\n        type: SELL_STOCKS,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { createUser, sendOtp, verifyOtp } from \"../actions/Users\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/Register.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Register extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    showError: false,\r\n    errors: {},\r\n    isAdmin: false,\r\n    login: false,\r\n    otp: \"\",\r\n    signup: true,\r\n    show_otp_field: false\r\n  };\r\n\r\n  // SendOTP\r\n  sendOTP = () => {\r\n    if (this.validateForm()) {\r\n      let user = {\r\n        email: this.state.email\r\n      };\r\n      this.props.sendOtp(user);\r\n\r\n      this.setState({\r\n        show_otp_field: true\r\n      });\r\n    }\r\n  };\r\n\r\n  register = e => {\r\n    // e.preventDefault();\r\n    if (this.validateForm()) {\r\n      let user = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        password: this.state.password,\r\n        isAdmin: this.state.isAdmin\r\n      };\r\n      this.props.createUser(user);\r\n      this.setState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  verifyOTP = e => {\r\n    e.preventDefault();\r\n    let user = {\r\n      otp: this.state.otp\r\n    };\r\n    if (this.props.verifyOtp(user)) {\r\n      this.register();\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        otp: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // Validating the input form\r\n  validateForm() {\r\n    console.log(\"Hello\");\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!this.state.name) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"*Please enter your name\";\r\n    }\r\n\r\n    if (typeof this.state.name !== \"undefined\") {\r\n      if (!this.state.name.match(/^[a-zA-Z ]*$/)) {\r\n        formIsValid = false;\r\n        errors[\"name\"] = \"*Please enter alphabet characters only.\";\r\n      }\r\n    }\r\n\r\n    if (this.state.name.length < 6 || this.state.name.length > 8) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"*Please Enter name betwenn 6 to 8 characters only.\";\r\n    }\r\n\r\n    if (!this.state.email) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"*Please enter your email-ID.\";\r\n    }\r\n\r\n    if (typeof this.state.email !== \"undefined\") {\r\n      //regular expression for email validation\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(this.state.email)) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n      }\r\n    }\r\n\r\n    if (!this.state.phone) {\r\n      formIsValid = false;\r\n      errors[\"phone\"] = \"*Please enter your mobile no.\";\r\n    }\r\n\r\n    if (typeof this.state.phone !== \"undefined\") {\r\n      if (!this.state.phone.match(/^[0-9]{10}$/)) {\r\n        formIsValid = false;\r\n        errors[\"phone\"] = \"*Please enter valid mobile no.\";\r\n      }\r\n    }\r\n\r\n    if (this.state.password.length < 6 || this.state.password.length > 8) {\r\n      formIsValid = false;\r\n      errors[\"password\"] =\r\n        \"*Please Enter password betwenn 6 to 8 characters only.\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Please enter your password.\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"confirmPassword\"] = \"*Please Enter Password Again\";\r\n    }\r\n\r\n    if (this.state.password != this.state.confirmPassword) {\r\n      formIsValid = false;\r\n      errors[\"confirmPassword\"] = \"*Password Don't Match\";\r\n    }\r\n\r\n    this.setState({\r\n      errors: errors\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Main Container */}\r\n        <div id=\"registerMainContainer\">\r\n          {/* Let Conatiner */}\r\n          <div id=\"registerLeftContainer\">\r\n            <h1 id=\"welcome\" className=\"w3-container w3-center w3-animate-left\">\r\n              Benefits of SignUp\r\n            </h1>\r\n            {/*Benefits  */}\r\n            <p className=\"w3-container w3-center w3-animate-left\">\r\n              <ul id=\"registerBenefits\">\r\n                <li>Detailed comparison between Companies</li>\r\n                <li>Can download Financial Reports</li>\r\n                <li>Can download Indices Reports</li>\r\n                <li>Virtual Trading</li>\r\n              </ul>\r\n            </p>\r\n          </div>\r\n          {/* Right Container */}\r\n          <div id=\"registerRightContainer\">\r\n            <div>\r\n              {/* Link to login */}\r\n              <Link to=\"/login\">\r\n                <button\r\n                  id={this.state.login ? \"loginButton-active\" : \"loginButton\"}\r\n                >\r\n                  Login\r\n                </button>\r\n              </Link>\r\n              <button\r\n                id={\r\n                  this.state.signup ? \"registerButton-active\" : \"registerButton\"\r\n                }\r\n                onClick={() => {\r\n                  this.setState({\r\n                    login: false,\r\n                    signup: true\r\n                  });\r\n                }}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n\r\n            {/* FOrm Start */}\r\n            <form id=\"registerForm\">\r\n              {/* NAme Input */}\r\n              <p>\r\n                <input\r\n                  id=\"registerInput\"\r\n                  placeholder=\"Name (6 to 8 characters)\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                />\r\n              </p>\r\n              <p>\r\n                <p id=\"registerErrorMessage\">{this.state.errors.name}</p>\r\n              </p>\r\n              <p>\r\n                <input\r\n                  id=\"registerInput\"\r\n                  placeholder=\"Email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                />\r\n              </p>\r\n              <p id=\"registerErrorMessage\">{this.state.errors.email}</p>\r\n              <p>\r\n                <input\r\n                  id=\"registerInput\"\r\n                  placeholder=\"Mobile No\"\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.phone}\r\n                />\r\n              </p>\r\n              <p id=\"registerErrorMessage\">{this.state.errors.phone}</p>\r\n              <p>\r\n                <input\r\n                  id=\"registerInput\"\r\n                  placeholder=\"Password (6 to 8 characters)\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                />\r\n              </p>\r\n              <p id=\"registerErrorMessage\">{this.state.errors.password}</p>\r\n              <p>\r\n                <input\r\n                  id=\"registerInput\"\r\n                  placeholder=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.confirmPassword}\r\n                />\r\n              </p>\r\n              <p id=\"registerErrorMessage\">\r\n                {this.state.errors.confirmPassword}\r\n              </p>\r\n\r\n              {this.props.error ? (\r\n                <p id=\"registerErrorMessage\">{this.props.error}</p>\r\n              ) : (\r\n                <p style={{ display: \"none\" }}>Hello</p>\r\n              )}\r\n              <p>\r\n                {this.state.show_otp_field === true ? (\r\n                  <>\r\n                    <input\r\n                      id=\"resetPasswordInput\"\r\n                      placeholder=\"Enter OTP (4 digit)\"\r\n                      type=\"password\"\r\n                      name=\"otp\"\r\n                      value={this.state.otp}\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                    {/* Checking the error */}\r\n                    {this.props.error ? (\r\n                      <p>{this.props.error}</p>\r\n                    ) : (\r\n                      <p style={{ color: \"#2c3e50\" }}>Hello</p>\r\n                    )}\r\n                    <p>\r\n                      <button onClick={this.verifyOTP} id=\"resetPasswordButton\">\r\n                        Register\r\n                      </button>\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <button onClick={this.sendOTP} id=\"registerFormButton\">\r\n                    Proceed\r\n                  </button>\r\n                )}\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.usersReducer.users,\r\n  error: state.usersReducer.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { createUser, sendOtp, verifyOtp })(\r\n  Register\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { resetPassword, sendOtp, verifyOtp } from \"../actions/Users\";\r\nimport \"../styles/ResetPassword.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class ResetPassword extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    otp: \"\",\r\n    errors: {},\r\n    show_otp_field: false,\r\n    inputField: true\r\n  };\r\n\r\n  OnChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // Send OTP\r\n  sendOTP = e => {\r\n    e.preventDefault();\r\n    if (this.validateForm()) {\r\n      let user = {\r\n        email: this.state.email\r\n      };\r\n      this.props.sendOtp(user);\r\n    }\r\n    this.setState({\r\n      show_otp_field: true\r\n    });\r\n  };\r\n\r\n  // Reset Password\r\n  onReset = () => {\r\n    let user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.resetPassword(user);\r\n  };\r\n\r\n  // Verify OTP function\r\n  verifyOTP = e => {\r\n    e.preventDefault();\r\n    let user = {\r\n      otp: this.state.otp\r\n    };\r\n    if (this.props.verifyOtp(user)) {\r\n      this.onReset();\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        otp: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // Function for validating form input fields\r\n  validateForm() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    if (!this.state.email) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"*Please enter your Email-ID.\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Please enter your Password.\";\r\n    }\r\n\r\n    if (!this.state.confirmPassword) {\r\n      formIsValid = false;\r\n      errors[\"confirmPassword\"] = \"*Please Enter Confirm Password\";\r\n    }\r\n\r\n    if (this.state.password != this.state.confirmPassword) {\r\n      formIsValid = false;\r\n      errors[\"confirmPassword\"] = \"*Password Don't Match\";\r\n    }\r\n\r\n    this.setState({\r\n      errors: errors\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Reset password main conatiner */}\r\n        <div id=\"resetPasswordMainContainer\">\r\n          {/* reset password form */}\r\n          <form id=\"resetPasswordForm\">\r\n            <div>\r\n              <button id=\"resetButton\">Reset Password</button>\r\n            </div>\r\n            <input\r\n              id=\"resetPasswordInput\"\r\n              placeholder=\"Email\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.OnChange}\r\n            />\r\n\r\n            <p id=\"resetPasswordErrorMessage\">{this.state.errors.email}</p>\r\n\r\n            <input\r\n              id=\"resetPasswordInput\"\r\n              placeholder=\"New Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.OnChange}\r\n            />\r\n\r\n            <p id=\"resetPasswordErrorMessage\">{this.state.errors.password}</p>\r\n\r\n            <input\r\n              id=\"resetPasswordInput\"\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              value={this.state.confirmPassword}\r\n              onChange={this.OnChange}\r\n            />\r\n\r\n            <p id=\"resetPasswordErrorMessage\">\r\n              {this.state.errors.confirmPassword}\r\n            </p>\r\n\r\n            {/* Checking the state of otp filed , if the filed is true then show otp fileds */}\r\n            {this.state.show_otp_field === true ? (\r\n              <>\r\n                <input\r\n                  id=\"resetPasswordInput\"\r\n                  placeholder=\"Enter Otp\"\r\n                  type=\"password\"\r\n                  name=\"otp\"\r\n                  value={this.state.otp}\r\n                  onChange={this.OnChange}\r\n                />\r\n\r\n                <p>{this.props.error ? this.props.error : \"Hello\"}</p>\r\n\r\n                <p id=\"resetPasswordErrorMessage\">{this.state.errors.otp}</p>\r\n\r\n                <button onClick={this.verifyOTP} id=\"resetPasswordButton\">\r\n                  Reset\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <button onClick={this.sendOTP} id=\"resetPasswordButton\">\r\n                Proceed\r\n              </button>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.usersReducer.users,\r\n  error: state.usersReducer.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { resetPassword, sendOtp, verifyOtp })(\r\n  ResetPassword\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../actions/Users\";\r\nimport \"../styles/Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n    login: true,\r\n    signup: true\r\n  };\r\n\r\n  OnChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // Login Function to be called on Click\r\n  onLogin = e => {\r\n    e.preventDefault();\r\n    // Checks the validation\r\n    if (this.validateForm()) {\r\n      let user = {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      };\r\n      this.props.login(user, this.props.history);\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // Function for validation check\r\n  validateForm() {\r\n    console.log(\"Hello\");\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    if (!this.state.email) {\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"*Please enter your Email-ID.\";\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Please enter your Password.\";\r\n    }\r\n\r\n    this.setState({\r\n      errors: errors\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Main Container For login */}\r\n        <div id=\"loginMainContainer\">\r\n          {/* Login Left Container for Welcome Text */}\r\n          <div id=\"loginLeftContainer\">\r\n            <h1\r\n              id=\"loginwelcome\"\r\n              className=\"w3-container w3-center w3-animate-left\"\r\n            >\r\n              Welcome Back!\r\n            </h1>\r\n            <p className=\"w3-container w3-center w3-animate-left\">\r\n              An Investment in Knowledge <br />\r\n              pays the best Interest\r\n            </p>\r\n          </div>\r\n\r\n          {/* Login Component Right container login form */}\r\n          <div id=\"loginRightContainer\">\r\n            {/* Container for Buttons */}\r\n            <div>\r\n              <Link to=\"/login\">\r\n                <button\r\n                  id={\r\n                    this.state.login\r\n                      ? \"loginComponentButton-active\"\r\n                      : \"loginComponentButton\"\r\n                  }\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      login: false,\r\n                      signup: true\r\n                    });\r\n                  }}\r\n                >\r\n                  Login\r\n                </button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <button id=\"registerComponentButton\">Sign Up</button>\r\n              </Link>\r\n            </div>\r\n\r\n            <form id=\"loginForm\">\r\n              <p>\r\n                {\" \"}\r\n                <input\r\n                  id=\"loginInput\"\r\n                  placeholder=\"Email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.OnChange}\r\n                  value={this.state.email}\r\n                />\r\n              </p>\r\n              <p id=\"loginErrorMessage\">{this.state.errors.email}</p>\r\n              <p>\r\n                <input\r\n                  id=\"loginInput\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.OnChange}\r\n                  value={this.state.password}\r\n                />\r\n              </p>\r\n              <p id=\"loginErrorMessage\">{this.state.errors.password}</p>\r\n\r\n              {this.props.error ? (\r\n                <p id=\"loginErrorMessage\">{this.props.error}</p>\r\n              ) : (\r\n                <p style={{ display: \"none\" }}>Hello</p>\r\n              )}\r\n              <Link to=\"/resetpassword\" style={{ textDecoration: \"none\" }}>\r\n                <p\r\n                  style={{\r\n                    color: \"#39abf7\",\r\n                    marginTop: \"20px\"\r\n                  }}\r\n                >\r\n                  Forgot Password ?\r\n                </p>\r\n              </Link>\r\n              <p>\r\n                <button onClick={this.onLogin} id=\"loginFormButton\">\r\n                  Login\r\n                </button>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.usersReducer.users,\r\n  error: state.usersReducer.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/UserNavigation.css\";\r\nimport wallet from \"./wallet.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getWallet } from \"../../actions/Users\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport class UserNavigation extends Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n      console.log(decode);\r\n      let email = {\r\n        email: decode.email\r\n      };\r\n      this.props.getWallet(email);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"userNavigationContainer\">\r\n          {/* Start of Navigation */}\r\n          <div id=\"userNavigation\">\r\n            {/* Mapping User name */}\r\n            {localStorage.getItem(\"token\") ? (\r\n              <h1>Hi {decode.name} !</h1>\r\n            ) : (\r\n              <h1>Hi User !</h1>\r\n            )}\r\n            <img src={wallet} id=\"wallet\" /> {/* Mapping wallet amount */}\r\n            <span id=\"walletPrice\">\r\n              ${Number(this.props.wallet ? this.props.wallet : 0.0).toFixed(2)}\r\n            </span>\r\n            {/* Redirect to profile */}\r\n            <div id=\"userNavigationButtonContainer\">\r\n              <Link to=\"/profile\">\r\n                <button\r\n                  id={\r\n                    this.props.selected === \"profile\"\r\n                      ? \"buyStocks-active\"\r\n                      : \"buyStocks\"\r\n                  }\r\n                >\r\n                  Buy Stocks\r\n                </button>\r\n              </Link>\r\n              {/* Redirect to buystockks */}\r\n              <Link to=\"/buyStocks\">\r\n                <button\r\n                  id={\r\n                    this.props.selected === \"buy\"\r\n                      ? \"myStocks-active\"\r\n                      : \"myStocks\"\r\n                  }\r\n                >\r\n                  My Stocks\r\n                </button>\r\n              </Link>\r\n              {/* Redirect to history */}\r\n              <Link to=\"/userhistory\">\r\n                <button\r\n                  id={\r\n                    this.props.selected === \"history\"\r\n                      ? \"historyStocks-active\"\r\n                      : \"historyStocks\"\r\n                  }\r\n                >\r\n                  History\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  wallet: state.usersReducer.wallet\r\n});\r\n\r\nexport default connect(mapStateToProps, { getWallet })(UserNavigation);\r\n","import { SEARCH_CONTENT } from \"./Types\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//getting Search results\r\n\r\nexport const searchContent = searchInput => dispatch => {\r\n  return axios\r\n    .post(\r\n      \"https://headstocks-server-nodejs.herokuapp.com/api/navbar/search\",\r\n      searchInput\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: SEARCH_CONTENT,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/UserProfile.css\";\r\nimport UserNavigation from \"./Common/UserNavigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchContent } from \"../actions/Navbar\";\r\nimport { buyStocks } from \"../actions/Users\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class UserProfile extends Component {\r\n  state = {\r\n    // input text in the search box\r\n    searchInput: \"\",\r\n    searchInputChanged: false,\r\n    qty: \"\",\r\n    total: 0\r\n  };\r\n\r\n  OnChange = event => {\r\n    {\r\n      this.state.searchInputChanged\r\n        ? console.log(this.state.searchInputChanged)\r\n        : this.setState({\r\n            searchInputChanged: true\r\n          });\r\n    }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n\r\n    let searchString = {\r\n      searchInput: this.state.searchInput\r\n    };\r\n    this.props.searchContent(searchString);\r\n  };\r\n\r\n  onSearch = e => {\r\n    e.preventDefault();\r\n\r\n    let searchString = {\r\n      searchInput: this.state.searchInput\r\n    };\r\n\r\n    this.props.searchContent(searchString);\r\n  };\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n    }\r\n    return (\r\n      <div>\r\n        <div\r\n          id={\r\n            localStorage.getItem(\"token\")\r\n              ? \"analysis_main_container\"\r\n              : \"analysis_main_container_blur\"\r\n          }\r\n        >\r\n          <div id=\"userProfileContainer\">\r\n            <UserNavigation wallet={this.props.users} selected=\"profile\" />\r\n\r\n            <div id=\"userSearch\">\r\n              <h1>Welcome to HeadStocks</h1>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search for Stocks you want to buy (E.g . AAPL)\"\r\n                name=\"searchInput\"\r\n                id=\"userProfileSearch\"\r\n                value={this.state.searchInput}\r\n                onChange={this.OnChange}\r\n              />\r\n              <button type=\"submit\" id=\"userProfileSearchButton\">\r\n                <i class=\"fa fa-search\"></i>\r\n              </button>\r\n\r\n              {this.state.searchInput == \"\" ? null : (\r\n                <div className=\"search-result\">\r\n                  {this.props.results.length != 0 ? (\r\n                    this.props.results.map((stocks, index) => (\r\n                      <div id=\"search_map\">\r\n                        <div\r\n                          id={\"tickerName\" + index}\r\n                          style={{\r\n                            fontSize: \"18px\",\r\n                            paddingTop: \"0px \",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                          }}\r\n                        >\r\n                          {stocks.ticker_name}\r\n                        </div>\r\n                        <div>\r\n                          <p id={\"tickerPrice\" + index}>\r\n                            <b>${stocks.price}</b>\r\n                          </p>\r\n                          <p style={{ color: \"#707070\" }}>Current Price</p>\r\n                        </div>\r\n                        <div>\r\n                          <div class=\"buyStocksBox\">\r\n                            <a class=\"buy\" href=\"#buyStockspopup1\">\r\n                              Buy\r\n                            </a>\r\n                          </div>\r\n\r\n                          <div id=\"buyStockspopup1\" class=\"buyStocksoverlay\">\r\n                            <div class=\"buyStockspopup\">\r\n                              <h2>{stocks.ticker_name}</h2>\r\n                              <a class=\"buyStocksclose\" href=\"#\">\r\n                                &times;\r\n                              </a>\r\n                              <div class=\"buyStockscontent\">\r\n                                <p>Current Price : ${stocks.price}</p>\r\n                                <p>\r\n                                  Quantity :{\" \"}\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    // class=\"quantity\"\r\n                                    id=\"buyingQuantity\"\r\n                                    name=\"qty\"\r\n                                    value={this.state.qty}\r\n                                    onChange={e =>\r\n                                      this.setState({\r\n                                        [e.target.name]: e.target.value,\r\n                                        total: (e.target.value *= Number(\r\n                                          stocks.price\r\n                                        ))\r\n                                      })\r\n                                    }\r\n                                  />\r\n                                </p>\r\n                                <p>\r\n                                  Total Price : $\r\n                                  {Number(this.state.total).toFixed(2)}\r\n                                </p>\r\n                                <a\r\n                                  id=\"buySpecificStock\"\r\n                                  href=\"#\"\r\n                                  onClick={() => {\r\n                                    {\r\n                                      let user = {\r\n                                        email: decode.email,\r\n                                        ticker_name: stocks.ticker_name,\r\n                                        current_price: stocks.price,\r\n                                        qty: this.state.qty,\r\n                                        price: this.state.total\r\n                                      };\r\n                                      this.props.buyStocks(user);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  Buy\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p style={{ padding: \"10px 10px\" }}>No Company Found</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id={localStorage.getItem(\"token\") ? \"bg-no-text\" : \"bg-text\"}>\r\n          <p>Please login to enable this feature</p>\r\n          <Link to=\"/login\">\r\n            <button id=\"button_for_blur\">Login</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  results: state.navbarReducer.results,\r\n  isLoading: state.LoadingReducer.isLoading,\r\n  users: state.usersReducer.users\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchContent, buyStocks })(\r\n  UserProfile\r\n);\r\n","import React, { Component } from \"react\";\r\nimport UserNavigation from \"./Common/UserNavigation\";\r\nimport \"../styles/UserBuyStocks.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllStocks, sellStocks } from \"../actions/Users\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport class UserBuyStocks extends Component {\r\n  state = {\r\n    qty: \"\",\r\n    total: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n      let email = {\r\n        email: decode.email\r\n      };\r\n      this.props.getAllStocks(email);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n    }\r\n    var rand;\r\n    return (\r\n      <div>\r\n        {/* Buy STocks Main Container */}\r\n        <div id=\"buyStocksContainer\">\r\n          <UserNavigation selected=\"buy\" />\r\n          {this.props.users ? (\r\n            <div id=\"userStocksContainer\">\r\n              {this.props.users.length != 0 ? (\r\n                <table id=\"userBuyStocksTable\">\r\n                  <thead id=\"userBuyStocksHeader\">\r\n                    <th>Stocks</th>\r\n                    <th>Bought Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Selling price</th>\r\n                    <th></th>\r\n                    {/* <th>Date</th> */}\r\n                    <th></th>\r\n                  </thead>\r\n                  {this.props.users.map(hist => (\r\n                    <>\r\n                      {hist.company.map((stocks, index) => (\r\n                        <tr>\r\n                          <td id={\"tickerName\" + index}>\r\n                            {stocks.ticker_name}\r\n                          </td>\r\n                          <td id={\"tickerPrice\" + index}>\r\n                            {stocks.current_price}\r\n                          </td>\r\n\r\n                          <td id={\"tickerQty\" + index}>\r\n                            {stocks.buying_quantity}\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            {\"\"}\r\n                            {\r\n                              (rand = Number(\r\n                                Math.random() *\r\n                                  (Number(stocks.current_price) +\r\n                                    5 -\r\n                                    (Number(stocks.current_price) - 5)) +\r\n                                  (Number(stocks.current_price) - 5)\r\n                              ).toFixed(2))\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            {stocks.current_price > rand ? (\r\n                              <span\r\n                                class=\"fa fa-caret-down\"\r\n                                style={{ color: \"red\", fontSize: \"18px\" }}\r\n                              ></span>\r\n                            ) : (\r\n                              <span\r\n                                class=\"fa fa-caret-up\"\r\n                                style={{ color: \"green\", fontSize: \"18px\" }}\r\n                              ></span>\r\n                            )}{\" \"}\r\n                            {Number(\r\n                              ((rand - stocks.current_price) /\r\n                                stocks.current_price) *\r\n                                100\r\n                            ).toFixed(2)}{\" \"}\r\n                            %\r\n                          </td>\r\n                          <td>\r\n                            <div class=\"sellStocksBox\">\r\n                              <a\r\n                                class=\"sell\"\r\n                                href={\"#sellStockspopup1\" + stocks.ticker_name}\r\n                              >\r\n                                Sell\r\n                              </a>\r\n                            </div>\r\n\r\n                            <div\r\n                              class=\"sellStocksoverlay\"\r\n                              id={\"sellStockspopup1\" + stocks.ticker_name}\r\n                            >\r\n                              <div class=\"sellStockspopup\">\r\n                                <h2>{stocks.ticker_name}</h2>\r\n                                {console.log(stocks.ticker_name)}\r\n                                <a class=\"sellStocksclose\" href=\"#\">\r\n                                  &times;\r\n                                </a>\r\n                                <div class=\"sellStockscontent\">\r\n                                  <p>Current Price : ${rand}</p>\r\n                                  <p>\r\n                                    Quantity :{\" \"}\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      id=\"sellingQuantity\"\r\n                                      name=\"qty\"\r\n                                      value={this.state.qty}\r\n                                      placeholder=\"0\"\r\n                                      onChange={e =>\r\n                                        this.setState({\r\n                                          [e.target.name]: e.target.value,\r\n                                          total: (e.target.value *= Number(\r\n                                            213.55\r\n                                          ))\r\n                                        })\r\n                                      }\r\n                                    />\r\n                                  </p>\r\n                                  {Number(this.state.qty) >\r\n                                  stocks.buying_quantity ? (\r\n                                    <p style={{ color: \"#ff4d4d\" }}>\r\n                                      Quantity Exceeded (Max Qty to Sell :{\" \"}\r\n                                      {stocks.buying_quantity})\r\n                                    </p>\r\n                                  ) : null}\r\n                                  <p>Total Price : ${this.state.total}</p>\r\n                                  <a\r\n                                    id=\"sellSpecificStock\"\r\n                                    href=\"#\"\r\n                                    onClick={() => {\r\n                                      {\r\n                                        let user = {\r\n                                          email: decode.email,\r\n                                          ticker_name: stocks.ticker_name,\r\n                                          sell_price: rand,\r\n                                          selling_quantity: this.state.qty,\r\n                                          price: this.state.total\r\n                                        };\r\n                                        this.props.sellStocks(user);\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    Sell\r\n                                  </a>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </>\r\n                  ))}\r\n                </table>\r\n              ) : (\r\n                <h1>No Stocks Bought</h1>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>Loading ...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.usersReducer.users,\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getAllStocks,\r\n  sellStocks\r\n})(UserBuyStocks);\r\n","import { ALL_NEWS, NEWS_BY_ID, GET_ALL_INDICES } from \"./Types\";\r\nimport { startLoading, stopLoading } from \"./LoadingAction\";\r\nimport axios from \"axios\";\r\nconst url = \"https://headstocks-server-nodejs.herokuapp.com/api/home/\";\r\n\r\n// get all news - piyush\r\nexport const allNews = () => dispatch => {\r\n  return axios\r\n    .get(url + \"allnews\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: ALL_NEWS,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// get all news - piyush\r\nexport const newsById = news_id => dispatch => {\r\n  console.log(news_id);\r\n  return axios\r\n    .get(url + \"singleNews/\" + news_id)\r\n    .then(res => {\r\n      dispatch({\r\n        type: NEWS_BY_ID,\r\n        payload: res.data.data\r\n      });\r\n      console.log(res.data.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Get all Indices -piyush\r\nexport const getIndices = () => dispatch => {\r\n  dispatch(startLoading());\r\n  return axios\r\n    .get(url + \"index\")\r\n    .then(res => {\r\n      dispatch(stopLoading());\r\n      dispatch({\r\n        type: GET_ALL_INDICES,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch(startLoading());\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/TickerTable.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class TickerTable extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"table__container\">\r\n        {/* Mapping Table Headers */}\r\n        <table className=\"ticker__table\">\r\n          <thead className=\"ticker__tableHeader\">\r\n            <tr>\r\n              {this.props.tableHeaders.map((data, index) => (\r\n                <th id={\"TickerHeaders\" + index}>{data}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          {/* Mapping Table Data */}\r\n          {this.props.tableData.map((current, index) => (\r\n            <tr>\r\n              {/* Maping Ticker name */}\r\n              {this.props.isIndex == true ? (\r\n                <Link\r\n                  to={{ pathname: \"/indexProfile/\" + current.ticker_id }}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <td id={\"tcikerNameReuse\" + index}>\r\n                    {current.ticker_name ? current.ticker_name : null}\r\n                  </td>\r\n                </Link>\r\n              ) : (\r\n                <Link\r\n                  to={{ pathname: \"/companydetail/\" + current.ticker_id }}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <td id={\"tcikerNameReuse\" + index}>\r\n                    {current.ticker_name ? current.ticker_name : null}\r\n                  </td>\r\n                </Link>\r\n              )}\r\n              {current.tickerValues\r\n                ? Object.keys(current.tickerValues).map((keyName, index) => (\r\n                    <>\r\n                      {current.tickerValues[keyName].substring(0, 1) == \"-\" ? (\r\n                        <td style={{ color: \"#ff4d4d\" }}>\r\n                          {current.tickerValues[keyName]}\r\n                        </td>\r\n                      ) : current.tickerValues[keyName].substring(0, 1) ==\r\n                        \"+\" ? (\r\n                        <td\r\n                          style={{ color: \"#27ae60\" }}\r\n                          id={\"tickerValues\" + index}\r\n                        >\r\n                          {current.tickerValues[keyName]}\r\n                        </td>\r\n                      ) : (\r\n                        <td>{current.tickerValues[keyName]}</td>\r\n                      )}\r\n                    </>\r\n                  ))\r\n                : null}\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps, {})(TickerTable);\r\n","//piyush\r\nimport React, { Component } from \"react\";\r\nimport { allNews, newsById, getIndices } from \"../actions/Home\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/Home.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Table from \"../components/Common/TickerTable\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport class Home extends Component {\r\n  componentDidMount() {\r\n    //this function calls the get News function which is defined in the actions which will retrive all the data from the news table.\r\n    this.props.allNews();\r\n    this.props.newsById(1);\r\n    this.props.getIndices();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.indices ? this.props.indices[\"0\"] : \"Load\");\r\n    console.log(this.props.isLoading);\r\n    return (\r\n      <body>\r\n        <div id=\"homecontainer\">\r\n          {/* <Navbar> */}\r\n          {this.props.indices[\"0\"] ? ( //use to display loader [piyush]\r\n            <>\r\n              <div id=\"homeleftsidecontainer\">\r\n                <h1>Recent News</h1>\r\n                <div>\r\n                  <div id=\"recent-news\"></div>\r\n                  {/* recent news */}\r\n                  {this.props.news.map((news, index) => (\r\n                    <div className=\"div-newspage\">\r\n                      <div id=\"news-list\">\r\n                        <p\r\n                          id=\"recent-news-title\"\r\n                          className={\"recent-news-title\" + index}\r\n                          onClick={() => this.props.newsById(news.new_id)}\r\n                        >\r\n                          {news.headline}\r\n                        </p>\r\n                        <p id=\"newsdivider\">\r\n                          <hr />\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div id=\"homemiddlecontainer\">\r\n                <div>\r\n                  {/*single news */}\r\n                  <h3 id=\"headline\">{this.props.singleNews[0].headline}</h3>\r\n                  <img\r\n                    id=\"image\"\r\n                    src={\r\n                      \"data:image/jpeg;base64,\" +\r\n                      this.props.singleNews[0].news_image\r\n                    }\r\n                  />\r\n                  <p id=\"headlineDescription\">\r\n                    {this.props.singleNews[0].description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div id=\"homerightsidecontainer\">\r\n                {/*for indics table */}\r\n                <h1>Indices</h1>\r\n                <div>\r\n                  <Table\r\n                    tableHeaders={[\"Index\", \"Chng%\", \"Last CLosed\"]}\r\n                    tableData={this.props.indices[\"0\"].index}\r\n                    isIndex={this.props.indices[\"0\"].isIndex}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div style={{ margin: \"200px 500px\" }}>\r\n              <Loader type={Loader} color=\"#2c3e50\" height=\"100\" width=\"400\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  news: state.homeReducer.news,\r\n  singleNews: state.homeReducer.singleNews,\r\n  indices: state.homeReducer.indices,\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\nexport default connect(mapStateToProps, {\r\n  allNews,\r\n  newsById,\r\n  getIndices\r\n})(Home);\r\n","import { LOADING_START, LOADING_STOP } from \"./Types\";\r\n\r\n// for start loading [piyush]\r\nexport const startLoading = () => {\r\n  return {\r\n    type: LOADING_START\r\n  };\r\n};\r\n\r\n// for stop loading [piyush]\r\nexport const stopLoading = () => {\r\n  return {\r\n    type: LOADING_STOP\r\n  };\r\n};\r\n","//piyush\r\nimport React, { Component } from \"react\";\r\nimport \"../styles/UserHistory.css\";\r\nimport UserNavigation from \"./Common/UserNavigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { userHistory } from \"../actions/Users\";\r\nimport jwt_decode from \"jwt-decode\";\r\n// for user to see the history of hid stock buy and sell\r\n\r\nexport class UserHistory extends Component {\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      var decode = jwt_decode(localStorage.getItem(\"token\"));\r\n      this.props.userHistory(decode.email);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"userHistoryContainer\">\r\n          <UserNavigation selected=\"history\" />\r\n          {/*side bar for user detail*/}\r\n          <div id=\"userhistory\">\r\n            {this.props.userhistory.length != 0 ? (\r\n              <table id=\"userhistory_table\">\r\n                <thead id=\"userhistory_tableHeader\">\r\n                  <th>Stocks</th>\r\n                  <th>Price</th>\r\n                  <th>Buy/Sell</th>\r\n                  <th>Quantity</th>\r\n                  <th>Date</th>\r\n                </thead>\r\n                {/*here we are getting the user tickername and his selling buying informaation*/}\r\n                {this.props.userhistory.map(hist => (\r\n                  <>\r\n                    {hist.company.map((stocks, index) => (\r\n                      <tr>\r\n                        <td id={\"tickerName\" + index}>{stocks.ticker_name}</td>\r\n                        <td id={\"tickerPrice\" + index}>\r\n                          {stocks.current_price}\r\n                        </td>\r\n                        {stocks.sell == true ? <td>Sold</td> : <td>Bought</td>}\r\n                        {stocks.sell == true ? (\r\n                          <td id={\"tickerQty\" + index}>\r\n                            {stocks.selling_quantity}\r\n                          </td>\r\n                        ) : (\r\n                          <td id={\"tickerQty\" + index}>\r\n                            {stocks.buying_quantity}\r\n                          </td>\r\n                        )}\r\n                        <td id={\"tickerDate\" + index}>\r\n                          {new Date(stocks.buy_date).toLocaleDateString(\r\n                            \"en-In\",\r\n                            {\r\n                              month: \"short\",\r\n                              day: \"2-digit\",\r\n                              year: \"numeric\"\r\n                            }\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </>\r\n                ))}\r\n              </table>\r\n            ) : (\r\n              <h1>No Stocks History</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userhistory: state.usersReducer.userhistory,\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\nexport default connect(mapStateToProps, {\r\n  userHistory\r\n})(UserHistory);\r\n","/*piyush*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"../styles/Kafka.css\";\r\nimport axios from \"axios\";\r\nvar stompClient = null;\r\nconst Stomp = require(\"stompjs\");\r\n\r\nvar SockJS = require(\"sockjs-client\");\r\n\r\nexport default class Kafka extends Component {\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://headstocks-kafka-producer.herokuapp.com\");\r\n    //here we did the connection with consumer with the help of stockjs\r\n    SockJS = new SockJS(\"https://head-stocks-kafka-consumer.herokuapp.com/ws\");\r\n\r\n    stompClient = Stomp.over(SockJS);\r\n\r\n    stompClient.connect({}, this.onConnected, this.onError);\r\n  }\r\n\r\n  onConnected = () => {\r\n    this.setState({\r\n      data: []\r\n    });\r\n\r\n    console.log(\"connected\");\r\n\r\n    // Subscribing to the public topic\r\n    stompClient.subscribe(\"/topic/public\", this.onMessageReceived);\r\n  };\r\n\r\n  onError = error => {\r\n    console.log(\"error\");\r\n    // if there is any error while connecting then with the help  of this function we will get the know th error\r\n    this.setState({\r\n      error:\r\n        \"Could not connect you to the Chat Room Server. Please refresh this page and try again!\"\r\n    });\r\n  };\r\n\r\n  onMessageReceived = msg => {\r\n    var body = JSON.parse(msg.body);\r\n    this.setState({\r\n      data: body\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"kafkamainContainer\">\r\n        {this.state.data.map(i => (\r\n          <div id=\"kafka\">\r\n            <div\r\n              id=\"kafka_indices\"\r\n              className=\"w3-container w3-center w3-animate-top\"\r\n            >\r\n              {i.tickerName}\r\n            </div>\r\n\r\n            <div\r\n              id=\"kafka_index_price\"\r\n              className=\"w3-container w3-center w3-animate-top\"\r\n            >\r\n              {\" \"}\r\n              {/*here we are checking for first character in closing on that below condition will work */}\r\n              {Number(i.closing).toFixed(2)}{\" \"}\r\n              <span\r\n                id={\r\n                  String(i.changePercentage).charAt(0) == \"-\"\r\n                    ? \"change-ve\"\r\n                    : \"changepositive\"\r\n                }\r\n              >\r\n                ({Number(i.changePercentage).toFixed(2)}%)\r\n              </span>\r\n              {/*here we are checking for first character in change percentge on that below condition will work */}\r\n              {String(i.changePercentage).charAt(0) == \"-\" ? (\r\n                <span\r\n                  className=\"fa fa-caret-down\"\r\n                  style={{ color: \"#ff4d4d\", margin: \"5px\" }}\r\n                ></span>\r\n              ) : (\r\n                <span\r\n                  className=\"fa fa-caret-up\"\r\n                  style={{ color: \"#27ae60\", margin: \"5px\" }}\r\n                ></span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// css file\r\nimport \"../styles/Navbar.css\";\r\n\r\n// logos\r\n// import user from \"./user.svg\"\r\nimport cancel from \"./Common/cancel.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchContent } from \"../actions/Navbar\";\r\n// import { debounce } from \"debounce\";\r\n\r\nexport class NavbarDefault extends Component {\r\n  state = {\r\n    // input text in the search box\r\n    searchInput: \"\",\r\n    searchInputChanged: false,\r\n\r\n    // to highlight the current page\r\n    home: false,\r\n    stocks: false,\r\n    login: false,\r\n    vtoption: false\r\n  };\r\n\r\n  removeToken = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.forceUpdate();\r\n  };\r\n\r\n  //Displays option inside the hamburger button\r\n  myhamburgfunction() {\r\n    // gets the complete navbar element\r\n    var x = document.getElementById(\"navbarID\");\r\n    // checks if navbar has the required className\r\n    if (x.className === \"navbarHS\") {\r\n      // adds another className that displays navbar options\r\n      x.className += \" responsiveHS\";\r\n    } else {\r\n      x.className = \"navbarHS\";\r\n    }\r\n  }\r\n\r\n  // handles the input change performed in the search input box\r\n  OnChange = event => {\r\n    // search results display\r\n    // {\r\n    //   this.state.searchInputChanged\r\n    //     ? console.log(this.state.searchInputChanged)\r\n    //     :\r\n    this.setState({\r\n      searchInputChanged: true\r\n    });\r\n    // }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    // debounce(() => {\r\n\r\n    let searchString = {\r\n      searchInput: this.state.searchInput\r\n    };\r\n    this.props.searchContent(searchString);\r\n    // }, 1000);\r\n  };\r\n\r\n  onSearch = e => {\r\n    e.preventDefault();\r\n\r\n    let searchString = {\r\n      searchInput: this.state.searchInput\r\n    };\r\n\r\n    this.props.searchContent(searchString);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.results);\r\n    return (\r\n      <div className=\"navbarHS\" id=\"navbarID\">\r\n        <Link to=\"/\">\r\n          <div className=\"navbarLogoName\">\r\n            <span\r\n              id=\"navbarLogoText1\"\r\n              className=\"active\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  home: true,\r\n                  stocks: false,\r\n                  vtoption: false,\r\n                  login: false\r\n                })\r\n              }\r\n            >\r\n              HEAD<b id=\"navbarLogoText2\">STOCKS</b>\r\n            </span>\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"navbarLoginOptions\" onClick={this.myhamburgfunction}>\r\n          {/* checks if the user is logged In User or not */}\r\n          {!localStorage.getItem(\"token\") ? (\r\n            <span>\r\n              <Link\r\n                to=\"/login\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    home: false,\r\n                    stocks: false,\r\n                    vtoption: false,\r\n                    login: true\r\n                  })\r\n                }\r\n                className={\r\n                  this.state.login ? \"tabactive linkdecornone\" : \"linkdecornone\"\r\n                }\r\n                id=\"navbarLoginText\"\r\n              >\r\n                Login\r\n              </Link>\r\n            </span>\r\n          ) : (\r\n            <span onClick={this.removeToken}>\r\n              <Link\r\n                to=\"/\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={() =>\r\n                  this.setState({\r\n                    home: true,\r\n                    stocks: false,\r\n                    vtoption: false,\r\n                    login: false\r\n                  })\r\n                }\r\n              >\r\n                Logout\r\n              </Link>\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"navbarStockOptions\">\r\n          <span onClick={this.myhamburgfunction}>\r\n            <Link\r\n              to=\"/Stocks\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  home: false,\r\n                  stocks: true,\r\n                  vtoption: false,\r\n                  login: false\r\n                })\r\n              }\r\n              className={\r\n                this.state.stocks ? \"tabactive linkdecornone\" : \"linkdecornone\"\r\n              }\r\n              id=\"navbarStocksText\"\r\n            >\r\n              Stocks\r\n            </Link>\r\n          </span>\r\n        </div>\r\n        <div className=\"navbarVTOptions\">\r\n          <span onClick={this.myhamburgfunction}>\r\n            <Link\r\n              to=\"/profile\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  home: false,\r\n                  stocks: false,\r\n                  vtoption: true,\r\n                  login: false\r\n                })\r\n              }\r\n              className={\r\n                this.state.vtoption\r\n                  ? \"tabactive linkdecornone\"\r\n                  : \"linkdecornone\"\r\n              }\r\n              id=\"navbarVTText\"\r\n            >\r\n              Virtual Trading\r\n            </Link>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"navbarSearchBox\" id=\"navbarSearchBoxDiv\">\r\n          <span className=\"navbarSearchSpan\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"searchInput\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Search for ticker\"\r\n              onChange={this.OnChange}\r\n              id=\"navbarSearchInput\"\r\n            />\r\n            <button\r\n              id=\"navbarSearchResultsSearchButton\"\r\n              onClick={this.onSearch}\r\n            >\r\n              <i className=\"fa fa-search\"></i>\r\n            </button>\r\n          </span>\r\n\r\n          {// On input change division is displayed\r\n          this.state.searchInputChanged ? (\r\n            // division displaying the result of the search\r\n            <div className=\"navbarSearchResultsFound\">\r\n              <button\r\n                className=\"navbarSearchResultsCancelButton\"\r\n                id=\"navbarSearchCancelClick\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    searchInputChanged: false\r\n                    // ,searchInput: \"\"\r\n                  })\r\n                }\r\n              >\r\n                <img\r\n                  className=\"navbarSearchResultsCancelImage\"\r\n                  src={cancel}\r\n                  alt=\"Cancel Button\"\r\n                  width=\"15px\"\r\n                  height=\"15px\"\r\n                  // className=\"fa fa-cancel\"\r\n                ></img>\r\n              </button>\r\n              {/* checks if the result array has some data or not */}\r\n              {this.props.results.length === 0 ? (\r\n                // if no data present then this block executes\r\n                <h4>No Results Found for {this.state.searchInput}</h4>\r\n              ) : (\r\n                // if results array has some data then this displays the search result\r\n                <div>\r\n                  <h4>Search Results</h4>\r\n\r\n                  {this.props.results.map((result, index) => (\r\n                    <Link\r\n                      className=\"company-link\"\r\n                      id=\"linknavbar1\"\r\n                      // PASSING TO COMPANY DETAIL PAGE WITH THE ID WHICH IS MAPPED FROM THE REDUCER\r\n                      to={{\r\n                        pathname: \"/companydetail/\" + result.ticker_id\r\n                      }}\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          searchInputChanged: false\r\n                          // ,searchInput: \"\"\r\n                        })\r\n                      }\r\n                    >\r\n                      <div\r\n                        className=\"navbarSearchResultsDiv\"\r\n                        onClick={this.myhamburgfunction}\r\n                      >\r\n                        <p\r\n                          className=\"navbarSearchResultsPTag1\"\r\n                          id={\"tickerName\" + index}\r\n                        >\r\n                          <b>{result.ticker_name}</b>\r\n                        </p>\r\n                        <p\r\n                          className=\"navbarSearchResultsPTag2\"\r\n                          id={\"industry\" + index}\r\n                        >\r\n                          {result.industry}\r\n                        </p>\r\n                      </div>\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbarSearchResultsNotFound\"></div>\r\n          )}\r\n        </div>\r\n\r\n        <span className=\"icon\" onClick={this.myhamburgfunction}>\r\n          <i className=\"fa fa-bars\"></i>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  results: state.navbarReducer.results,\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchContent })(NavbarDefault);\r\n\r\n// Interview Ques for Data Science\r\n// Explain concept of svm\r\n// Normal Distribution\r\n// Count & TFIDF Vectorizer\r\n// P Value\r\n// Validation Set\r\n// Dimensionality Reduction\r\n// Gradient Descent\r\n// Data Cleaning in Data Science\r\n// Right and Left Join Difference\r\n// Transfer Learning\r\n// Regularization (types : L1 and L2)\r\n// Apply Filter for 64*64*3 image if there is padding and if there is no padding (Filter : 2*2)\r\n// Learning Rate\r\n// Deccaying Learning Rate\r\n// Momentum in Gradient Descent\r\n// OverFitting and UnderFitting\r\n// Sampling\r\n// Max Pooling Layer\r\n// Vanishing and Exploding rates\r\n// Role of Activation Function in CNN\r\n// Sigmoid,Softmax,TanX,RELU,Lineaer,Leaky Rate\r\n// How is Softmax different from other activation functions\r\n// Batch and Schotastic Grradient Descent\r\n","import {\r\n  COMPANY_DETAIL,\r\n  COMPANY_DETAIL_BY_ID,\r\n  COMPANY_DATES_BY_ID,\r\n  OHLC_CHART,\r\n  GET_SIMILAR_TABLE,\r\n  GET_DROP_DOWN,\r\n  GET_GAUGE_COMPANY1,\r\n  VOLATILITY,\r\n  GET_GAUGE_COMPANY2,\r\n  MONTECARLO_COMPANY1,\r\n  MONTECARLO_COMPANY2,\r\n  ASSETS_COMPANY1,\r\n  ASSETS_COMPANY2,\r\n  SHARE_PRICE_COMPARISON\r\n} from \"./Types\";\r\nimport { startLoading, stopLoading } from \"./LoadingAction\";\r\nimport axios from \"axios\";\r\n\r\n// getting company details[NIKHIL]\r\nexport const getCompanyDetail = () => dispatch => {\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/api/companydetail/all\"\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: COMPANY_DETAIL,\r\n          payload: res.data.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// getting company details by id [NIKHIL]\r\nexport const getCompanyDetailById = id => dispatch => {\r\n  console.log(\"get companydetails by id from actions\", id);\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/api/companydetail/\" + id\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: COMPANY_DETAIL_BY_ID,\r\n          payload: res.data.data\r\n        });\r\n        let sector = {\r\n          sector: res.data.data[\"0\"].sector\r\n        };\r\n        console.log(\"obj sector from action\", sector);\r\n\r\n        //To call another action within the action we call the function in the dipatch.\r\n        // calling another action\r\n        dispatch(getSimilarTable(sector));\r\n\r\n        console.log(\"from then\");\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//GETTING DATA FOR DROPDOWN\r\nexport const getDropDownData = sector => dispatch => {\r\n  console.log(\"actions of dropdown\", sector);\r\n  try {\r\n    return axios\r\n      .post(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/api/dropdown\",\r\n        sector\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_DROP_DOWN,\r\n          payload: res.data.data\r\n        });\r\n        console.log(\"from then of drop down action\");\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//getting analysis\r\nexport const getSimilarTable = sector => dispatch => {\r\n  // const sector = requset.body.sector;\r\n  console.log(\"get analysis by id from actions\", sector);\r\n  try {\r\n    return axios\r\n      .post(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/api/analysis/analysis\",\r\n        sector\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_SIMILAR_TABLE,\r\n\r\n          payload: res.data.data\r\n        });\r\n        console.log(\"from then of similar table\");\r\n        dispatch(getDropDownData(sector));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Fetching OHLC Chart for company [Bhavana]\r\nexport const getOhlcChart = id => dispatch => {\r\n  console.log(id);\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\"https://headstocks-python.herokuapp.com/companyindices/\" + id)\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: OHLC_CHART,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// downloading ohlc data for company[piyush]\r\n\r\nexport const downloadOhlcDataCompany = ohlc => {\r\n  try {\r\n    return axios.get(\r\n      \"https://headstocks-server-nodejs.herokuapp.com/api/companydetail/downloadohlc/\" +\r\n        ohlc\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// getting company dates by id\r\nexport const getCompanyDatesById = (id, yearSelected) => dispatch => {\r\n  // console.log(\"get companydetails by id from actions\", id);\r\n  try {\r\n    // console.log(yearSelected.yearInput);\r\n    if (yearSelected.yearInput !== \"All\") {\r\n      return axios\r\n        .post(\r\n          \"https://headstocks-server-nodejs.herokuapp.com/api/companydetail/financial/\" +\r\n            id,\r\n          yearSelected\r\n        )\r\n        .then(res => {\r\n          dispatch({\r\n            type: COMPANY_DATES_BY_ID,\r\n            payload: res.data.data\r\n          });\r\n        });\r\n    } else {\r\n      return axios\r\n        .post(\r\n          \"https://headstocks-server-nodejs.herokuapp.com/api/companydetail/financial/\" +\r\n            id\r\n        )\r\n        .then(res => {\r\n          dispatch({\r\n            type: COMPANY_DATES_BY_ID,\r\n            payload: res.data.data\r\n          });\r\n        });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Gauge for Company1\r\nexport const getGaugeCompany1 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/gaugeCompany1/\" + ticker\r\n      )\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: GET_GAUGE_COMPANY1,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// gauge fro company2\r\nexport const getGaugeCompany2 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/gaugeCompany2/\" + ticker\r\n      )\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: GET_GAUGE_COMPANY2,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Montre Carlo Prediction for Company1\r\nexport const getmonteCarloCompany1 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-python.herokuapp.com/monteCarloCompany1/\" + ticker\r\n      )\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: MONTECARLO_COMPANY1,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Monte Carlo Prediction for Company2\r\nexport const getmonteCarloCompany2 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-python.herokuapp.com/monteCarloCompany2/\" + ticker\r\n      )\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: MONTECARLO_COMPANY2,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n  }\r\n};\r\n\r\n// Assets and Liabilities Graph for Company1\r\nexport const getAssetsCompany1 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\"https://headstocks-python.herokuapp.com/assetsCompany1/\" + ticker)\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: ASSETS_COMPANY1,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n  }\r\n};\r\n\r\n// Assets and Liabilities Graph for Company1\r\nexport const getAssetsCompany2 = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\"https://headstocks-python.herokuapp.com/assetsCompany2/\" + ticker)\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: ASSETS_COMPANY2,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n  }\r\n};\r\n\r\n// Get Volatility\r\nexport const getVolatility = ticker => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\"https://headstocks-python.herokuapp.com/voltality/\" + ticker)\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: VOLATILITY,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n  }\r\n};\r\n\r\n// Share Price Comparison\r\nexport const sharePriceComparison = (ticker1, ticker2) => dispatch => {\r\n  dispatch(startLoading());\r\n  try {\r\n    return axios\r\n      .get(\r\n        \"https://headstocks-python.herokuapp.com/shareprice/\" +\r\n          ticker1 +\r\n          \"/\" +\r\n          ticker2\r\n      )\r\n      .then(res => {\r\n        dispatch(stopLoading());\r\n        dispatch({\r\n          type: SHARE_PRICE_COMPARISON,\r\n\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    dispatch(startLoading());\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getCompanyDetailById,\r\n  getVolatility\r\n} from \"../../actions/CompanyDetail\";\r\nimport { connect } from \"react-redux\";\r\nimport companylogo from \"./stockslogo.PNG\";\r\n\r\n// importing css file\r\nimport \"../../styles/CompanyDetailSecondaryNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class CompanyDetailSecondaryNavbar extends Component {\r\n  componentDidMount() {}\r\n  render() {\r\n    {\r\n      this.props.company[\"0\"]\r\n        ? this.props.getVolatility(this.props.company[\"0\"].id)\r\n        : console.log(null);\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"parent\">\r\n          {this.props.company ? (\r\n            <div>\r\n              {this.props.company.map(coms => (\r\n                <>\r\n                  <div id=\"company-details-tab-container\">\r\n                    <>\r\n                      <div id=\"secondary-navbar-img-name-container\">\r\n                        <div id=\"secondary-navbar-img\">\r\n                          <img\r\n                            id=\"stocks_img\"\r\n                            src={\r\n                              coms.image == null\r\n                                ? companylogo\r\n                                : \"data:image/jpeg;base64,\" + coms.image\r\n                            }\r\n                          />\r\n                        </div>\r\n\r\n                        <div id=\"secondary-navbar-ticker_name\">\r\n                          <p>{coms.ticker_name}</p>\r\n                          <p id=\"CompanyDetailsIndexClose\">\r\n                            {coms.last_share_price}\r\n\r\n                            <sub id=\"secondary-navbar-sub\">USD</sub>\r\n                          </p>\r\n                          <p id=\"last_date\">\r\n                            CLOSED PRICE (\r\n                            {new Date(coms.share_date).toLocaleDateString(\r\n                              \"en-IN\",\r\n                              {\r\n                                month: \"short\",\r\n                                day: \"2-digit\",\r\n                                year: \"numeric\"\r\n                              }\r\n                            )}\r\n                            )\r\n                          </p>\r\n                        </div>\r\n                        <div />\r\n                      </div>\r\n                      <ul id=\"company-detail-content-container\">\r\n                        <Link\r\n                          className=\"company-link\"\r\n                          // PASSING TO COMPANY DETAIL PAGE WITH THE ID WHICH IS MAPPED FROM THE REDUCER\r\n                          to={{\r\n                            pathname: \"/companydetail/\" + coms.id\r\n                          }}\r\n                        >\r\n                          <span id=\"company-detail-overview-click\">\r\n                            <li\r\n                              id=\"comapany-detail-overview-li\"\r\n                              // different css properties based on the value of the state\r\n                              className={\r\n                                this.props.selected === \"overview\"\r\n                                  ? \"options-selected-li\"\r\n                                  : \"options-li\"\r\n                              }\r\n                            >\r\n                              Overview\r\n                            </li>\r\n                          </span>\r\n                        </Link>\r\n                        {/* Financials  */}\r\n                        {/* <div id=\"company-detail-financial\"> */}\r\n\r\n                        <div id=\"company-detail-financial\">\r\n                          <Link\r\n                            className=\"company-link\"\r\n                            to={{\r\n                              pathname: \"/financial/\" + coms.id\r\n                            }}\r\n                          >\r\n                            <span id=\"company-financial-click\">\r\n                              <li\r\n                                id=\"company-detail-financial-li\"\r\n                                className={\r\n                                  this.props.selected === \"financial\"\r\n                                    ? \"options-selected-li\"\r\n                                    : \"options-li\"\r\n                                }\r\n                              >\r\n                                Financials\r\n                              </li>\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div id=\"company-detail-analysis\">\r\n                          <Link\r\n                            className=\"company-link\"\r\n                            to={{\r\n                              pathname: \"/analysis/\" + coms.id\r\n                            }}\r\n                          >\r\n                            <span id=\"company-analysis-click\">\r\n                              <li\r\n                                id=\"company-detail-analysis-li\"\r\n                                className={\r\n                                  this.props.selected === \"analysis\"\r\n                                    ? \"options-selected-li\"\r\n                                    : \"options-li\"\r\n                                }\r\n                              >\r\n                                Analysis\r\n                              </li>\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                      </ul>\r\n                      <div id=\"secondary-nav-values\">\r\n                        <div id=\"voltality\">\r\n                          <p> {this.props.voltality} </p>\r\n                          <div id=\"voltality_tooltip\">\r\n                            <div id=\"kk\">VOLATILITY </div>\r\n                            <div id=\"abc\">\r\n                              <i class=\"fa fa-question-circle\" />\r\n                              <span id=\"volatility\">\r\n                                Volatility is a statistical measure of the\r\n                                dispersion of returns for a given security or\r\n                                market index. In most cases, the higher the\r\n                                volatility, the riskier the security. Volatility\r\n                                is often measured as either the standard\r\n                                deviation or variance between returns from that\r\n                                same security or market index.\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* ------------------------------------------------------------------ */}\r\n                        <div id=\"voltality\">\r\n                          <p id=\"market_cap\"> {coms.last_market_cap} </p>\r\n                          <div id=\"kk\">MARKET CAP</div>\r\n                        </div>\r\n                        {/* --------------------------------------------------------------------------- */}\r\n                      </div>\r\n                    </>\r\n\r\n                    <div id=\"bla\">\r\n                      {localStorage.getItem(\"token\") ? (\r\n                        <div id=\"secondary-navbar-bla\">\r\n                          {/* second grid of secondaru navbar */}\r\n                          <button\r\n                            id=\"downloadButton\"\r\n                            onClick={async () => {\r\n                              fetch(\r\n                                \"http://localhost:2001/api/companydetail/indicatorsdata/\" +\r\n                                  coms.ticker_name\r\n                              ).then(response => {\r\n                                response.blob().then(blob => {\r\n                                  let url = window.URL.createObjectURL(blob);\r\n                                  let a = document.createElement(\"a\");\r\n                                  a.href = url;\r\n                                  a.download = coms.ticker_name + \".csv\";\r\n                                  a.click();\r\n                                });\r\n                                //window.location.href = response.url;\r\n                              });\r\n                              // this.props.downloadOHLC(\"AAPL\");\r\n                            }}\r\n                          >\r\n                            <i class=\"fa fa-download\" /> Download\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div style={{ display: \"none\" }}></div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <></>\r\n                </>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  company: state.CompanyDetailReducer.company,\r\n  voltality: state.CompanyDetailReducer.voltality\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getCompanyDetailById,\r\n  getVolatility\r\n})(CompanyDetailSecondaryNavbar);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getCompanyDetailById,\r\n  getOhlcChart,\r\n  getGaugeCompany1\r\n} from \"../actions/CompanyDetail\";\r\nimport { connect } from \"react-redux\";\r\n// importing css file\r\nimport \"../styles/CompanyDetail.css\";\r\nimport SecondaryNavbar from \"../components/Common/CompanyDetailSecondaryNavbar\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport class CompanyDetail extends Component {\r\n  componentDidMount() {\r\n    // storing the id in the params into a variable which will be passed along with the action\r\n    const id = this.props.match.params.id;\r\n    this.props.getCompanyDetailById(id);\r\n    this.props.getGaugeCompany1(id);\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {/* CALLING SECONDARY NAVBAR  */}\r\n        <SecondaryNavbar selected=\"overview\" />\r\n        {/* TERNARY OPERATOR TO CHECK WHETHER THE DATA IS LOADED IN THE REDUCER AND IF IT IS IT WILL BE MAPPED  */}\r\n        {this.props.company ? (\r\n          <div id=\"company-detail-grid-container\">\r\n            <div id=\"company-detail-profile\">\r\n              {this.props.company.map((company, index) => (\r\n                <>\r\n                  {/* <h3>\r\n                    Market Cap :\r\n                    <span id=\"market_cap\">{company.last_market_cap}</span>\r\n                  </h3> */}\r\n                  <h3>\r\n                    Sector :{\" \"}\r\n                    <span id=\"sector\" className={\"sector\" + index}>\r\n                      {company.sector}\r\n                    </span>\r\n                  </h3>{\" \"}\r\n                  <h3>\r\n                    Industry :{\" \"}\r\n                    <span id=\"industry\" className={\"industry\" + index}>\r\n                      {company.industry}\r\n                    </span>\r\n                  </h3>\r\n                  <h3>\r\n                    Employees :{\" \"}\r\n                    <span id=\"employee\" className={\"employee\" + index}>\r\n                      {company.employees}\r\n                    </span>\r\n                  </h3>\r\n                  <h3>\r\n                    <span id=\"profile\" className={\"profile\" + index}>\r\n                      {company.profile}\r\n                    </span>\r\n                  </h3>\r\n                </>\r\n              ))}\r\n            </div>\r\n            <div id=\"company-detail-recommendation\">\r\n              <img\r\n                id=\"img_gauge\"\r\n                src={\"data:image/jpeg;base64,\" + this.props.gauge1}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p />\r\n        )}\r\n        {this.props.isLoading ? ( // use to display loader [piyush]\r\n          <div style={{ margin: \"200px 500px\" }}>\r\n            <Loader type={Loader} color=\"#2c3e50\" height=\"100\" width=\"400\" />\r\n          </div>\r\n        ) : (\r\n          // PLOTTIGN THE GRAPH\r\n          <div\r\n            id=\"ohlcCompanyGraph\"\r\n            style={{\r\n              // border: \"1px solid #cacaca\",\r\n              width: \"97%\",\r\n              margin: \"auto\",\r\n              marginBottom: \"20px\"\r\n            }}\r\n          >\r\n            <iframe\r\n              src=\"https://plot.ly/~nikhilnikhil/236.embed\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"550px\",\r\n                outline: \"none\",\r\n                border: \"none\"\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  company: state.CompanyDetailReducer.company,\r\n  similar_company: state.CompanyDetailReducer.similar_company,\r\n  gauge1: state.CompanyDetailReducer.gauge1,\r\n  ohlc_chart: state.CompanyDetailReducer.ohlc_chart,\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getOhlcChart,\r\n  getCompanyDetailById,\r\n  getGaugeCompany1\r\n})(CompanyDetail);\r\n","import React, { Component } from \"react\";\r\nimport { Polar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class RadarGraph extends Component {\r\n  state = {\r\n    marksData: {\r\n      labels: [\r\n        \"Market Cap\",\r\n        \"Net Profit\",\r\n        \"Share Price\",\r\n        \"Revenue\",\r\n        \"Total Assets\",\r\n        \"EBIT\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#4BC0C0\",\r\n            \"#FFCE56\",\r\n            \"#ff4500\",\r\n            \"#36A2EB\",\r\n            \"#2c3e50\"\r\n          ],\r\n\r\n          data: this.props.data\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Polar\r\n          options={{\r\n            legend: false,\r\n            labels: false,\r\n            responsive: true\r\n          }}\r\n          data={this.state.marksData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(mapStateToProps, {})(RadarGraph);\r\n","import {\r\n  GET_ALL_COMPANY,\r\n  GET_ALL_SECTORS,\r\n  GET_ALL_INDUSTRIES,\r\n  GAINERS_LOSERS,\r\n  SCREENER_SEARCH\r\n} from \"./Types\";\r\nimport { startLoading, stopLoading } from \"./LoadingAction\";\r\nimport axios from \"axios\";\r\nconst url = \"https://headstocks-server-nodejs.herokuapp.com/api/sector/\";\r\n\r\n// GET companies by sector and industry\r\nexport const getCompany = (filter, type) => dispatch => {\r\n  dispatch(startLoading());\r\n  return axios\r\n    .post(url + \"allcompanies/\" + filter + \"/\" + type)\r\n    .then(res => {\r\n      dispatch(stopLoading());\r\n      dispatch({\r\n        type: GET_ALL_COMPANY,\r\n        payload: res.data.data\r\n      });\r\n      console.log(res.data.data);\r\n    })\r\n    .catch(err => {\r\n      dispatch(startLoading());\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// GET all sectors\r\nexport const getSectors = () => dispatch => {\r\n  return axios\r\n    .get(url + \"companysectors\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ALL_SECTORS,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//getting industries by sector\r\nexport const getIndustries = sector => dispatch => {\r\n  console.log(\"get industries by sector from actions:\", sector);\r\n  return axios\r\n    .get(url + \"industries/\" + sector)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ALL_INDUSTRIES,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// GET Gainers and Losers by Sector\r\nexport const getGainersLosers = sector => dispatch => {\r\n  return axios\r\n    .get(url + \"gainers-and-losers/\" + sector)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GAINERS_LOSERS,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n// [Nikhil]  get screener search\r\nexport const getScreenerSearch = (\r\n  ebit1,\r\n  ebit2,\r\n  market_cap_value1,\r\n  market_cap_value2,\r\n  share_price1,\r\n  share_price2,\r\n  total_assests1,\r\n  total_assests2,\r\n  revenue1,\r\n  revenue2,\r\n  net_profit1,\r\n  net_profit2,\r\n  sector,\r\n  industry\r\n) => dispatch => {\r\n  let values = {\r\n    ebit1: ebit1,\r\n    ebit2: ebit2,\r\n    market_cap_value1: market_cap_value1,\r\n    market_cap_value2: market_cap_value2,\r\n    share_price1: share_price1,\r\n    share_price2: share_price2,\r\n    total_assests1: total_assests1,\r\n    total_assests2: total_assests2,\r\n    revenue1: revenue1,\r\n    revenue2: revenue2,\r\n    net_profit1: net_profit1,\r\n    net_profit2: net_profit2,\r\n    sector: sector,\r\n    industry: industry\r\n  };\r\n  console.log(\"from screener search actions\", values);\r\n  return axios\r\n    .post(\r\n      \"https://headstocks-server-nodejs.herokuapp.com/api/screener/screener\",\r\n      values\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: SCREENER_SEARCH,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/Admin.css\";\r\n\r\nimport { updateCompany } from \"../actions/UpdateCompany\";\r\nimport SampleTable from \"./Common/SampleData.png\";\r\n\r\nexport class UpdateCompany extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null\r\n    };\r\n  }\r\n\r\n  onChangeHandler = event => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0]\r\n    });\r\n  };\r\n  onClickHandler = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", this.state.selectedFile);\r\n\r\n    this.props.updateCompany(data, this.props.id);\r\n    // console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div id=\"updateCompanyMainDiv\">\r\n        <a className=\"admin_close\" href=\"#stocks_main_grid_container\">\r\n          &times;\r\n        </a>\r\n        {this.state.selectedFile != null ? (\r\n          <p></p>\r\n        ) : (\r\n          <>\r\n            <p id=\"updateCompanyMainDivText1\">Select a File</p>\r\n            <div id=\"updateCompany_tooltip_div\">\r\n              <i class=\"fa fa-info-circle\" />\r\n              <span id=\"updateCompany_tooltip_text\">\r\n                <ul className=\"updateCompany_tooltip_text_list\">\r\n                  <li>\r\n                    File must be a <b>csv</b> file.\r\n                  </li>\r\n                  <li>\r\n                    <b>Indicator Names</b> must be the same as used in the\r\n                    Application.\r\n                  </li>\r\n                  <li>\r\n                    Indicator Names on <b>left</b> and their Data on{\" \"}\r\n                    <b>right</b>\r\n                  </li>\r\n                  <li>\r\n                    Date for the data must be in ISO format\r\n                    <b>(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\")</b>.\r\n                  </li>\r\n                  <li>It should follow the below pattern.</li>\r\n                </ul>\r\n                <img\r\n                  src={SampleTable}\r\n                  alt=\"Sample Table\"\r\n                  className=\"updateCompany_table_image\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </>\r\n        )}\r\n        <input\r\n          className=\"updateCompany_admin_input\"\r\n          style={\r\n            this.state.selectedFile != null\r\n              ? { padding: \"12px 35px 0px 25px\" }\r\n              : { padding: \"12px 35px 0px 35px\" }\r\n          }\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={this.onChangeHandler}\r\n        />\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-block updateCompany_admin_button\"\r\n          onClick={this.onClickHandler}\r\n        >\r\n          <i className=\"fa fa-upload\" style={{ marginRight: \"5px\" }}></i>\r\n          <a\r\n            href=\"#stocks_main_grid_container\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            Upload\r\n          </a>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  //  isLoading: state.LoadingReducer.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateCompany })(UpdateCompany);\r\n","import { UPDATE_COMPANY } from \"./Types\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//updating a company\r\nexport const updateCompany = (data, id) => dispatch => {\r\n  try {\r\n    return axios\r\n      .post(\r\n        \"https://headstocks-server-nodejs.herokuapp.com/api/upload/updateCompany/\" +\r\n          id,\r\n        data\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: UPDATE_COMPANY,\r\n          payload: res.data.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Reports.css\";\r\n\r\nexport default class Reports extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"financialTableContainer\">\r\n        <table\r\n          className={\r\n            this.props.yearValue === \"All\"\r\n              ? \"financialTableData\"\r\n              : \"financialTableData2\"\r\n          }\r\n        >\r\n          {this.props.headers.map(indicatorName => (\r\n            <tr>\r\n              {indicatorName === \"date\" ? (\r\n                <td className=\"financialTableDataTitle\">Indicator Name</td>\r\n              ) : indicatorName === \"Total Assets\" ||\r\n                indicatorName === \"Total Liabilities\" ||\r\n                indicatorName === \"Equity Before Minorities\" ||\r\n                indicatorName === \"Change in Working Capital\" ? (\r\n                <td className=\"financialsTotalTD\">{indicatorName}</td>\r\n              ) : (\r\n                <td>{indicatorName}</td>\r\n              )}\r\n              <>\r\n                {this.props.reportdata.map(value => (\r\n                  <>\r\n                    {indicatorName === \"date\" ? (\r\n                      <td className=\"financialTableDataTitle\">\r\n                        {\" \"}\r\n                        {new Date(value[indicatorName]).toLocaleDateString(\r\n                          \"en-IN\",\r\n                          {\r\n                            month: \"short\",\r\n                            year: \"2-digit\"\r\n                          }\r\n                        )}\r\n                      </td>\r\n                    ) : indicatorName === \"Total Assets\" ||\r\n                      indicatorName === \"Total Liabilities\" ||\r\n                      indicatorName === \"Equity Before Minorities\" ||\r\n                      indicatorName === \"Change in Working Capital\" ? (\r\n                      <td className=\"financialsTotalTD\">\r\n                        {value[indicatorName] ? value[indicatorName] : \"-\"}\r\n                      </td>\r\n                    ) : (\r\n                      <td>\r\n                        {value[indicatorName] ? value[indicatorName] : \"-\"}\r\n                      </td>\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SecondaryNavbar from \"../components/Common/CompanyDetailSecondaryNavbar\";\r\nimport \"../styles/CompanyDetailFinancial.css\";\r\n// importing action\r\nimport { getCompanyDatesById } from \"../actions/CompanyDetail\";\r\n// images for the sidebar\r\nimport balanceSheet from \"./Common/bl.png\";\r\nimport cashFlow from \"./Common/cf.png\";\r\nimport profitloss from \"./Common/pl.png\";\r\nimport ratios from \"./Common/ratios.png\";\r\n\r\nimport ReportsTable from \"./Reports\";\r\n\r\nlet yearSelected = {};\r\nexport class CompanyDetailFinancial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const year = new Date().getFullYear();\r\n    this.years = Array.from(new Array(12), (val, index) => year - index);\r\n    this.state = {\r\n      balanceSheetOption: true,\r\n      cashflowOption: false,\r\n      profitLossOption: false,\r\n      ratiosOption: false,\r\n\r\n      // selecting yearly data\r\n      yearInput: \"All\"\r\n    };\r\n  }\r\n\r\n  // state = {\r\n\r\n  // };\r\n\r\n  componentDidMount() {\r\n    // getting the id from the params\r\n    const id = this.props.match.params.id;\r\n    yearSelected = { yearInput: \"All\" };\r\n    // PASSING THE ID TO THE ACTION\r\n    this.props.getCompanyDatesById(id, yearSelected);\r\n  }\r\n\r\n  getByYear = e => {\r\n    this.setState({\r\n      yearInput: e.target.value\r\n    });\r\n\r\n    const id = this.props.match.params.id;\r\n\r\n    if (this.state.yearInput === \"All\") {\r\n      yearSelected = { yearInput: \"All\" };\r\n    } else {\r\n      yearSelected = {\r\n        yearInput: e.target.value\r\n      };\r\n    }\r\n    this.props.getCompanyDatesById(id, yearSelected);\r\n  };\r\n\r\n  render() {\r\n    let report = this.props\r\n      ? this.props.dates\r\n        ? this.props.dates.length > 0\r\n          ? this.props.dates\r\n          : []\r\n        : []\r\n      : [];\r\n\r\n    return (\r\n      <div>\r\n        {/* CALLING THE SECONDARY NAVBAR  */}\r\n        <SecondaryNavbar selected=\"financial\" />\r\n        <div className=\"financialYearsDropdown\">\r\n          <select\r\n            type=\"text\"\r\n            className=\"financialsYearsOption\"\r\n            id=\"financialsYearsOptionID\"\r\n            name=\"yearInput\"\r\n            value={this.state.yearInput}\r\n            onChange={this.getByYear}\r\n          >\r\n            <option name=\"choice\">All</option>\r\n\r\n            {this.years.map((year, index) => {\r\n              return (\r\n                <option key={`year${index}`} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"financialsMainGrid\">\r\n          <sidebar className=\"financialsSidebar\">\r\n            <div\r\n              className=\"financialsSidebarOptions\"\r\n              id=\"financialsSidebarMain\"\r\n            >\r\n              <a\r\n                id=\"item1\"\r\n                href=\"#table1\"\r\n                className={\r\n                  this.state.balanceSheetOption ? \"financialsSidebarItem\" : null\r\n                }\r\n                onClick={() =>\r\n                  this.setState({\r\n                    balanceSheetOption: true,\r\n                    cashflowOption: false,\r\n                    profitLossOption: false,\r\n                    ratiosOption: false\r\n                  })\r\n                }\r\n              >\r\n                <img\r\n                  src={balanceSheet}\r\n                  alt=\"Balance Sheet\"\r\n                  width=\"80px\"\r\n                  height=\"80px\"\r\n                  style={{ margin: \"20px 10px 10px 10px\" }}\r\n                />\r\n                <p className=\"financialsSidebarOptionsP\">Balance Sheet</p>\r\n              </a>\r\n              <a\r\n                id=\"item2\"\r\n                href=\"#table2\"\r\n                className={\r\n                  this.state.cashflowOption ? \"financialsSidebarItem\" : null\r\n                }\r\n                onClick={() =>\r\n                  this.setState({\r\n                    balanceSheetOption: false,\r\n                    cashflowOption: true,\r\n                    profitLossOption: false,\r\n                    ratiosOption: false\r\n                  })\r\n                }\r\n              >\r\n                <img\r\n                  src={cashFlow}\r\n                  alt=\"Cash Flow\"\r\n                  width=\"80px\"\r\n                  height=\"80px\"\r\n                  style={{ margin: \"20px 10px 10px 10px\" }}\r\n                />\r\n                <p className=\"financialsSidebarOptionsP\">Cash Flow</p>\r\n              </a>\r\n              <a\r\n                id=\"item3\"\r\n                href=\"#table3\"\r\n                className={\r\n                  this.state.profitLossOption ? \"financialsSidebarItem\" : null\r\n                }\r\n                onClick={() =>\r\n                  this.setState({\r\n                    balanceSheetOption: false,\r\n                    cashflowOption: false,\r\n                    profitLossOption: true,\r\n                    ratiosOption: false\r\n                  })\r\n                }\r\n              >\r\n                <img\r\n                  src={profitloss}\r\n                  alt=\"Profit & Loss\"\r\n                  width=\"80px\"\r\n                  height=\"80px\"\r\n                  style={{ margin: \"20px 10px 10px 10px\" }}\r\n                />\r\n                <p className=\"financialsSidebarOptionsP\">Profit & Loss</p>\r\n              </a>\r\n              <a\r\n                id=\"item4\"\r\n                href=\"#table4\"\r\n                className={\r\n                  this.state.ratiosOption ? \"financialsSidebarItem\" : null\r\n                }\r\n                onClick={() =>\r\n                  this.setState({\r\n                    balanceSheetOption: false,\r\n                    cashflowOption: false,\r\n                    profitLossOption: false,\r\n                    ratiosOption: true\r\n                  })\r\n                }\r\n              >\r\n                <img\r\n                  src={ratios}\r\n                  alt=\"Ratios\"\r\n                  width=\"80px\"\r\n                  height=\"80px\"\r\n                  style={{ margin: \"20px 10px 10px 10px\" }}\r\n                />\r\n                <p className=\"financialsSidebarOptionsP\">Ratios</p>\r\n              </a>\r\n            </div>\r\n          </sidebar>\r\n\r\n          <div className=\"financialsAllTablesDiv\">\r\n            <h1 className=\"financialsTitle\" id=\"table1\">\r\n              Balance Sheet\r\n            </h1>\r\n\r\n            <ReportsTable\r\n              headers={[\r\n                \"date\",\r\n                \"Current Assets\",\r\n                \"Intangible Assets\",\r\n                \"Cash & Cash Equivalents\",\r\n                \"Goodwill\",\r\n                \"Total Assets\",\r\n                \"Accounts Payable\",\r\n                \"Receivables\",\r\n                \"Current Liabilities\",\r\n                \"Total Liabilities\",\r\n                \"Preferred Equity\",\r\n                \"Total Noncurrent Liabilities\",\r\n                \"Equity Before Minorities\"\r\n              ]}\r\n              reportdata={report}\r\n              yearValue={this.state.yearInput}\r\n            />\r\n            {/* </div> */}\r\n            <h1 className=\"financialsTitle\" id=\"table2\">\r\n              Cash Flow\r\n            </h1>\r\n            <ReportsTable\r\n              headers={[\r\n                \"date\",\r\n                \"Depreciation & Amortisation\",\r\n                \"PP&E & Intangibles\",\r\n                \"Net Change in PP&E & Intangibles\",\r\n                \"Net Change in Cash\",\r\n                \"Cash From Operating Activities\",\r\n                \"Cash From Investing Activities\",\r\n                \"Cash From Financing Activities\",\r\n                \"Change in Working Capital\"\r\n              ]}\r\n              reportdata={report}\r\n              yearValue={this.state.yearInput}\r\n            />\r\n\r\n            <h1 className=\"financialsTitle\" id=\"table3\">\r\n              Profit And Loss\r\n            </h1>\r\n            <ReportsTable\r\n              headers={[\r\n                \"date\",\r\n                \"Revenues\",\r\n                \"EBIT\",\r\n                \"Net Profit\",\r\n                \"R&D\",\r\n                \"Income Taxes\"\r\n              ]}\r\n              reportdata={report}\r\n              yearValue={this.state.yearInput}\r\n            />\r\n\r\n            <h1 className=\"financialsTitle\" id=\"table4\">\r\n              Ratios\r\n            </h1>\r\n            <ReportsTable\r\n              headers={[\r\n                \"date\",\r\n                \"Liabilities to Equity Ratio\",\r\n                \"Debt to Assets Ratio\",\r\n                \"Current Ratio\",\r\n                \"EV / EBITDA\",\r\n                \"EV / Sales\",\r\n                \"Operating Income / EV\"\r\n              ]}\r\n              reportdata={report}\r\n              yearValue={this.state.yearInput}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dates: state.CompanyDetailReducer.dates\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getCompanyDatesById\r\n})(CompanyDetailFinancial);\r\n","import React, { Component } from \"react\";\r\nimport CompanyDetailSecondaryNavbar from \"./Common/CompanyDetailSecondaryNavbar\";\r\nimport {\r\n  getCompanyDetailById,\r\n  getSimilarTable,\r\n  getDropDownData,\r\n  getGaugeCompany1,\r\n  getGaugeCompany2,\r\n  getmonteCarloCompany1,\r\n  getmonteCarloCompany2,\r\n  getAssetsCompany1,\r\n  getAssetsCompany2,\r\n  sharePriceComparison\r\n} from \"../actions/CompanyDetail\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/CompanyDetailAnalysis.css\";\r\nimport gauge from \"./Common/gauge.png\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Table from \"./Common/TickerTable\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class CompanyDetailAnalysis extends Component {\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    this.props.getCompanyDetailById(id);\r\n    this.props.getGaugeCompany1(this.props.match.params.id);\r\n    this.props.getGaugeCompany2(\"ACN\");\r\n    this.props.getAssetsCompany1(this.props.match.params.id);\r\n    this.props.getAssetsCompany2(\"ACN\");\r\n    this.props.getmonteCarloCompany1(\"AAPL\");\r\n    this.props.getmonteCarloCompany2(\"ACN\");\r\n    this.props.sharePriceComparison(this.props.match.params.id, \"ACN\");\r\n  }\r\n\r\n  //function that would change the state value with the value selected and inside which the action function will be called and that ticker name will passed\r\n  // this action is to plot the graph\r\n  OnSelectTicker = e => {\r\n    this.setState({\r\n      ticker_name: e.target.value\r\n    });\r\n    this.props.getGaugeCompany2(e.target.value);\r\n    this.props.getAssetsCompany2(e.target.value);\r\n    this.props.getmonteCarloCompany2(e.target.value);\r\n    this.props.sharePriceComparison(\"AAPL\", e.target.value);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {/* checking whether the data has been loaded into the reducer and if it is then getSimilarTabl which will have a parameter sector from the data loaded in the reducer  */}\r\n        <CompanyDetailSecondaryNavbar selected=\"analysis\" />\r\n        <div\r\n          id={\r\n            localStorage.getItem(\"token\")\r\n              ? \"analysis_main_container\"\r\n              : \"analysis_main_container_blur\"\r\n          }\r\n        >\r\n          <div id=\"company_analaysis_table\">\r\n            {this.props.similar_company[\"0\"] ? (\r\n              <>\r\n                {console.log(\r\n                  this.props.similar_company[\"0\"].similar_sector_data\r\n                )}\r\n                <Table\r\n                  tableHeaders={[\r\n                    \"Ticker\",\r\n                    \"Dividends\",\r\n                    \"Market Cap\",\r\n                    \"Net Profit\",\r\n                    \"P/E ratio\",\r\n                    \"Share Price\",\r\n                    \"ROCE%\"\r\n                  ]}\r\n                  tableData={this.props.similar_company[\"0\"]}\r\n                />\r\n              </>\r\n            ) : (\r\n              <p>Loading </p>\r\n            )}\r\n          </div>\r\n          {/* DROPDOWN FOR SIMILAR COMPANIES  */}\r\n\r\n          <div id=\"company-analysis-similar-cimpany-dropdown\">\r\n            <div id=\"compare_analysis\">\r\n              <p>Detailed Comparision with: </p>\r\n              <select\r\n                type=\"text\"\r\n                className=\"stocks_dropdown\"\r\n                name=\"sector\"\r\n                onChange={this.OnSelectTicker}\r\n              >\r\n                {this.props.drop_down_data.map(companies => (\r\n                  <>\r\n                    <option name=\"choice\">{companies.ticker_name}</option>\r\n                  </>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {!this.props.isLoading ? (\r\n            <div>\r\n              <div id=\"analysis-stock-chart\">\r\n                {\" \"}\r\n                <p id=\"analysis_graph_title\">Share Price Comparision</p>\r\n                <iframe\r\n                  id=\"assets1\"\r\n                  src={this.props.sharePriceComparison}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"500px\",\r\n                    outline: \"none\",\r\n                    border: \"none\"\r\n                  }}\r\n                />\r\n              </div>\r\n              <div id=\"analysis-financial-positional-grid-container\">\r\n                <div id=\"analysis-financial-positional-1\">\r\n                  <div id=\"stocks_assests\">\r\n                    <iframe\r\n                      id=\"assets1\"\r\n                      src=\"https://plot.ly/~nikhile/432.embed\"\r\n                      style={{\r\n                        width: \"650px\",\r\n                        height: \"500px\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div id=\"analysis-financial-positional-2\">\r\n                  <iframe\r\n                    src=\"https://plot.ly/~nikhile/434.embed\"\r\n                    style={{\r\n                      width: \"650px\",\r\n                      height: \"500px\",\r\n                      outline: \"none\",\r\n                      border: \"none\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p id=\"analysis_graph_title\">Recommendation</p>\r\n              <div id=\"analysis-recommendation-grid-container\">\r\n                <div id=\"analysis-recommendation-1\">\r\n                  <img\r\n                    id=\"analysis-gauge-1\"\r\n                    src={\r\n                      this.props.gauge1\r\n                        ? \"data:image/jpeg;base64,\" + this.props.gauge1\r\n                        : gauge\r\n                    }\r\n                  />\r\n                </div>\r\n                <div id=\"analysis-recommendation-2\">\r\n                  <img\r\n                    id=\"analysis-gauge-2\"\r\n                    src={\r\n                      this.props.gauge2\r\n                        ? \"data:image/jpeg;base64,\" + this.props.gauge2\r\n                        : gauge\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div id=\"analysis-financial-positional-grid-container\">\r\n                <div id=\"analysis-financial-positional-1\">\r\n                  <div id=\"stocks_assests\">\r\n                    <iframe\r\n                      id=\"assets1\"\r\n                      src=\"https://plot.ly/~nikhile/428.embed\"\r\n                      style={{\r\n                        width: \"650px\",\r\n                        height: \"500px\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div id=\"analysis-financial-positional-2\">\r\n                  <iframe\r\n                    src=\"https://plot.ly/~nikhile/430.embed\"\r\n                    style={{\r\n                      width: \"650px\",\r\n                      height: \"500px\",\r\n                      outline: \"none\",\r\n                      border: \"none\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{ margin: \"200px 550px\" }}>\r\n              <Loader type={Loader} color=\"#2c3e50\" height=\"100\" width=\"400\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div id={localStorage.getItem(\"token\") ? \"bg-no-text\" : \"bg-text\"}>\r\n          <p>Please login to enable this feature</p>\r\n          <Link to=\"/login\">\r\n            <button id=\"button_for_blur\">Login</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  company: state.CompanyDetailReducer.company,\r\n  similar_company: state.CompanyDetailReducer.similar_company,\r\n  drop_down_data: state.CompanyDetailReducer.drop_down_data,\r\n  gauge1: state.CompanyDetailReducer.gauge1,\r\n  gauge2: state.CompanyDetailReducer.gauge2,\r\n  monteCarlo1: state.CompanyDetailReducer.monteCarlo1,\r\n  monteCarlo2: state.CompanyDetailReducer.monteCarlo2,\r\n  assets1: state.CompanyDetailReducer.assets1,\r\n  assets2: state.CompanyDetailReducer.assets2,\r\n  priceComparison: state.CompanyDetailReducer.priceComparison,\r\n\r\n  isLoading: state.LoadingReducer.isLoading\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getCompanyDetailById,\r\n  getSimilarTable,\r\n  getDropDownData,\r\n  getGaugeCompany1,\r\n  getGaugeCompany2,\r\n  getmonteCarloCompany1,\r\n  getmonteCarloCompany2,\r\n  getAssetsCompany1,\r\n  getAssetsCompany2,\r\n  sharePriceComparison\r\n})(CompanyDetailAnalysis);\r\n","import {\r\n  GET_INDICES_BYID,\r\n  OHLC_CHART_INDEX,\r\n  OHLC_INDICES_DATA,\r\n  DOWNLOAD\r\n} from \"./Types\";\r\nimport axios from \"axios\";\r\nconst url =\r\n  \"https://headstocks-server-nodejs.herokuapp.com/api/indicesprofile/\";\r\n\r\n// GET all companies- Bhavana\r\nexport const getIndicesById = index => dispatch => {\r\n  return axios\r\n    .get(url + \"singleindex/\" + index)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_INDICES_BYID,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Get Ohlc Indices BY ID\r\nexport const getOhlcIndicesById = (index, range) => dispatch => {\r\n  console.log(range);\r\n  return axios\r\n    .post(url + \"ohlcdata/\" + index, range)\r\n    .then(res => {\r\n      dispatch({\r\n        type: OHLC_INDICES_DATA,\r\n        payload: res.data.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Fetching OHLC Chart for company\r\nexport const getOhlcChartIndex = id => dispatch => {\r\n  try {\r\n    return axios\r\n      .get(\"https://headstocks-python.herokuapp.com/ohlcindices/\" + id)\r\n      .then(res => {\r\n        dispatch({\r\n          type: OHLC_CHART_INDEX,\r\n          payload: res.data\r\n        });\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Download Report for Indices\r\nexport const download = report => dispatch => {\r\n  return axios\r\n    .post(\r\n      \"https://headstocks-server-nodejs.herokuapp.com/api/download/report\",\r\n      report\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: DOWNLOAD\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Footer.css\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      // Start of Footer -Bhavana\r\n      <div className=\"footer\">\r\n        <p className=\"footer-p\" id=\"footerInfo\">\r\n          {\" \"}\r\n          © Powered By headStocks\r\n        </p>\r\n        {/* Social media logos -Bhavana */}\r\n        <div className=\"footer-follow\">\r\n          <i className=\"fab fa-twitter footer-fab\"></i>\r\n          <i className=\"fab fa-facebook footer-fab\"></i>\r\n          <i className=\"fab fa-instagram footer-fab\"></i>\r\n          <i className=\"fab fa-pinterest footer-fab\"></i>\r\n        </div>\r\n      </div>\r\n      // End of footer-Bhavana\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getIndicesById,\r\n  getOhlcChartIndex,\r\n  getOhlcIndicesById,\r\n  download\r\n} from \"../actions/Indices\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/IndicesProfile.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport class IndicesProfile extends Component {\r\n  componentDidMount() {\r\n    // Get Indices Header\r\n    this.props.getIndicesById(this.props.match.params.id);\r\n    // Get Indices Graph\r\n    this.props.getOhlcChartIndex(this.props.match.params.id);\r\n    let time = {\r\n      time: \"1w\"\r\n    };\r\n    // Get Historic Prices\r\n    this.props.getOhlcIndicesById(this.props.match.params.id, time);\r\n  }\r\n\r\n  state = {\r\n    week: true\r\n  };\r\n\r\n  // Sending range of 1w\r\n  weekClick = () => {\r\n    let time = {\r\n      time: \"1w\"\r\n    };\r\n    this.props.getOhlcIndicesById(this.props.match.params.id, time);\r\n    this.setState({\r\n      week: true\r\n    });\r\n  };\r\n\r\n  // Sending range of 1m\r\n  monthClick = () => {\r\n    let time = {\r\n      time: \"1m\"\r\n    };\r\n    this.props.getOhlcIndicesById(this.props.match.params.id, time);\r\n    this.setState({\r\n      week: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Start of Main Cotainer */}\r\n        <div id=\"indicesMainContainer\">\r\n          {this.props.singleIndex.map(index => (\r\n            <>\r\n              <div id=\"indicesLeftContainer\">\r\n                <div id=\"indicesTopLeft\">\r\n                  {/* Mapping Ticker Name */}\r\n                  <h1>{index.ticker_name}</h1>\r\n                  {/* Checking token if exists then display download button */}\r\n                  {localStorage.getItem(\"token\") ? (\r\n                    <div>\r\n                      <button\r\n                        //for download [piyush]\r\n                        id=\"downloadButton\"\r\n                        type=\"button\"\r\n                        onClick={async () => {\r\n                          fetch(\r\n                            \"http://localhost:2001/api/indicesprofile/download/\" +\r\n                              index.ticker_name\r\n                          ).then(response => {\r\n                            response.blob().then(blob => {\r\n                              let url = window.URL.createObjectURL(blob);\r\n                              let a = document.createElement(\"a\");\r\n                              a.href = url;\r\n                              a.download = index.ticker_name + \".csv\";\r\n                              a.click();\r\n                            });\r\n                          });\r\n                          // this.props.downloadOHLC(\"AAPL\");\r\n                        }}\r\n                        // onClick={() => {\r\n                        //   let reports = {\r\n                        //     report: this.props.ohlcdata\r\n                        //   };\r\n                        //   console.log(reports);\r\n                        //   fetch(\"http://localhost:2001/api/download/report\", {\r\n                        //     method: \"POST\",\r\n                        //     body: JSON.stringify(reports),\r\n                        //     headers: {\r\n                        //       \"Content-Type\": \"appication/json\"\r\n                        //     }\r\n                        //   }).then(response => {\r\n                        //     response.blob().then(blob => {\r\n                        //       let url = window.URL.createObjectURL(blob);\r\n                        //       let a = document.createElement(\"a\");\r\n                        //       a.href = url;\r\n                        //       a.download = \"file.csv\";\r\n                        //       a.click();\r\n                        //     });\r\n                        //   });\r\n                        // }}\r\n                      >\r\n                        <i class=\"fa fa-download\" />\r\n                        Download\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div style={{ display: \"none\" }}></div>\r\n                  )}\r\n                </div>\r\n                {/* Mapping Closed Price */}\r\n                <div id=\"indicesNav\">\r\n                  <a id=\"indexClose\">\r\n                    {index.close} <sub>USD</sub>\r\n                  </a>\r\n                  {/* Open Price */}\r\n                  <a id=\"indexOpen\">{index.open}</a>\r\n                  {/* High */}\r\n                  <a id=\"indexOpen\">{index.high}</a>\r\n                  {/* Low */}\r\n                  <a id=\"indexOpen\">{index.adjclose}</a>\r\n                </div>\r\n                {/* Mapping Date */}\r\n                <div id=\"indicesNavName\">\r\n                  <a id=\"indexCloseName\">\r\n                    CLOSE (\r\n                    {new Date(index.date).toLocaleDateString(\"en-IN\", {\r\n                      month: \"short\",\r\n                      day: \"2-digit\",\r\n                      year: \"numeric\"\r\n                    })}\r\n                    )\r\n                  </a>\r\n                  <a id=\"indexOpenName\">OPEN</a>\r\n                  <a id=\"indexOpenName\">HIGH</a>\r\n                  <a id=\"indexOpenName\">ADJCLOSE</a>\r\n                </div>\r\n              </div>\r\n              {/* Mapping Stock Chart */}\r\n              <h3 id=\"indicesHeaderLabel\">Stock Chart</h3>\r\n              <div id=\"indicesGraphContainer\">\r\n                {this.props.isLoading ? (\r\n                  <div style={{ margin: \"200px 600px\" }}>\r\n                    <Loader type={Loader} color=\"#2c3e50\" height=\"100\" />\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                  // style={{\r\n                  //   border: \"1px solid #cacaca\",\r\n                  //   width: \"97%\",\r\n                  //   margin: \"auto\",\r\n                  //   marginBottom: \"20px\"\r\n                  // }}\r\n                  >\r\n                    <iframe\r\n                      src=\"https://plot.ly/~nikhilnikhil/230.embed\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"500px\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Mapping Historice Prices */}\r\n              <h3 id=\"indicesHeaderLabel\">Historic Prices</h3>\r\n              <div id=\"losersGainersContainer\">\r\n                <div id=\"indicesButtonContainer\">\r\n                  <b>Range : </b> {/* Sending range */}\r\n                  <button\r\n                    id={\r\n                      this.state.week === true\r\n                        ? \"weekButtonactive\"\r\n                        : \"weekButton\"\r\n                    }\r\n                    onClick={this.weekClick}\r\n                  >\r\n                    1w\r\n                  </button>\r\n                  <button\r\n                    id={\r\n                      this.state.week === false\r\n                        ? \"monthButtonactive\"\r\n                        : \"monthButton\"\r\n                    }\r\n                    onClick={this.monthClick}\r\n                  >\r\n                    1m\r\n                  </button>\r\n                </div>\r\n\r\n                <table id=\"historicTable\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      <th>Open</th>\r\n                      <th>High</th>\r\n                      <th>Low</th>\r\n                      <th>Close</th>\r\n                      <th>Adj Close</th>\r\n                      <th>Volume</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {/* Mapping Data range */}\r\n                  {this.props.ohlcdata.map((data, index) => (\r\n                    <tbody>\r\n                      {data.map((value, index1) => (\r\n                        <>\r\n                          {console.log(index1)}\r\n                          <tr>\r\n                            <td id={\"ohlcdate\" + index1}>\r\n                              {new Date(value.date).toLocaleDateString(\r\n                                \"en-IN\",\r\n                                {\r\n                                  month: \"short\",\r\n                                  day: \"2-digit\",\r\n                                  year: \"numeric\"\r\n                                }\r\n                              )}\r\n                            </td>\r\n                            <td>{value.open}</td>\r\n                            <td>{value.high}</td>\r\n                            <td>{value.low}</td>\r\n                            <td>{value.close}</td>\r\n                            <td>{value.adjclose}</td>\r\n                            <td>{value.volume}</td>\r\n                          </tr>\r\n                        </>\r\n                      ))}\r\n                    </tbody>\r\n                  ))}\r\n                </table>\r\n              </div>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  singleIndex: state.indexReducer.singleIndex,\r\n  ohlcChart: state.indexReducer.ohlcChart,\r\n  isLoading: state.LoadingReducer.isLoading,\r\n  ohlcdata: state.indexReducer.ohlcdata\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getIndicesById,\r\n  getOhlcChartIndex,\r\n  getOhlcIndicesById,\r\n  download\r\n})(IndicesProfile);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n// Bhavana\r\nimport Register from \"./components/Register\";\r\nimport ResetPassword from \"./components/ResetPassword\";\r\nimport Login from \"./components/Login\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport UserBuyStocks from \"./components/UserBuyStocks\";\r\n// Piyush\r\nimport home from \"./components/Home\";\r\nimport UserHistory from \"./components/UserHistory\";\r\nimport Kafka from \"./components/Kafka\";\r\n// Harshal\r\nimport NavbarDefault from \"./components/NavbarDefault\";\r\n// import UpdateCompany from \"./components/UpdateCompany\";\r\n// nikhil\r\nimport CompanyDetail from \"./components/CompanyDetail\";\r\nimport CompanyDetailSecondaryNavbar from \"./components/Common/CompanyDetailSecondaryNavbar\";\r\n// aditya\r\nimport StocksLanding from \"./components/StocksLanding\";\r\nimport CompanyDetailFinancial from \"./components/CompanyDetailFinancial\";\r\nimport CompanyDetailAnalysis from \"./components/CompanyDetailAnalysis\";\r\nimport Footer from \"./components/Footer\";\r\nimport IndicesProfile from \"./components/IndicesProfile\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/*piyush */}\r\n        <Kafka />\r\n        {/* Harshal */}\r\n        <NavbarDefault />\r\n        {/* <Route exact path=\"/updatecompany\" component={UpdateCompany} /> */}\r\n\r\n        {/* Bhavana */}\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/resetpassword\" component={ResetPassword} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/profile\" component={UserProfile} />\r\n        <Route exact path=\"/buyStocks\" component={UserBuyStocks} />\r\n        {/* Piyush */}\r\n        <Route exact path=\"/\" component={home} />\r\n        <Route exact path=\"/companydetail/:id\" component={CompanyDetail} />\r\n        <Route exact path=\"/userhistory\" component={UserHistory} />\r\n        {/* aditya */}\r\n        <Route exact path=\"/stocks\" component={StocksLanding} />\r\n        <Route\r\n          exact\r\n          path=\"/secondarynavbar\"\r\n          component={CompanyDetailSecondaryNavbar}\r\n        />\r\n        <Route exact path=\"/financial/:id\" component={CompanyDetailFinancial} />\r\n        <Route exact path=\"/analysis/:id\" component={CompanyDetailAnalysis} />\r\n        <Route exact path=\"/indexProfile/:id\" component={IndicesProfile} />\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./root\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <App />\r\n  </Root>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n","import React from 'react'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\n\r\nexport default props => {\r\n  return <Provider store={store}> {props.children}</Provider>\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/stockslogo.d33f7f6b.PNG\";"],"sourceRoot":""}